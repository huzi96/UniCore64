From e4bbf52fe2bbc45d89efe3e55a97ff8a94062e4d Mon Sep 17 00:00:00 2001
From: WangJing <wangjing@mprc.pku.edu.cn>
Date: Wed, 26 Oct 2011 17:04:19 +0800
Subject: [PATCH 036/641] UniCore64: Add struct swiotlb_dma_map_ops

Fixed error:
mm/built-in.o: In function `dma_pool_destroy':
(.text+0x27c6a): undefined reference to `swiotlb_dma_map_ops'
mm/built-in.o: In function `dma_pool_alloc':
(.text+0x27d6f): undefined reference to `swiotlb_dma_map_ops'
drivers/built-in.o: In function `dmam_coherent_release':
dma-mapping.c:(.text+0x24e71): undefined reference to `swiotlb_dma_map_ops'
drivers/built-in.o: In function `dmam_noncoherent_release':
dma-mapping.c:(.text+0x24e91): undefined reference to `swiotlb_dma_map_ops'
drivers/built-in.o: In function `dmam_alloc_coherent':
(.text+0x24f51): undefined reference to `swiotlb_dma_map_ops'
drivers/built-in.o: In function `dmam_free_coherent':
(.text+0x24fca): undefined reference to `swiotlb_dma_map_ops'
drivers/built-in.o: In function `dmam_alloc_noncoherent':
(.text+0x25051): undefined reference to `swiotlb_dma_map_ops'

Signed-off-by: WangJing <wangjing@mprc.pku.edu.cn>
---
 arch/unicore64/include/asm/dma-mapping.h |    5 +++
 arch/unicore64/mm/Kconfig                |    6 +++
 arch/unicore64/mm/Makefile               |    1 +
 arch/unicore64/mm/dma-swiotlb.c          |   68 ++++++++++++++++++++++++++++++
 4 files changed, 80 insertions(+)
 create mode 100644 arch/unicore64/mm/dma-swiotlb.c

diff --git a/arch/unicore64/include/asm/dma-mapping.h b/arch/unicore64/include/asm/dma-mapping.h
index 5e7d2d4..9c408bf 100644
--- a/arch/unicore64/include/asm/dma-mapping.h
+++ b/arch/unicore64/include/asm/dma-mapping.h
@@ -17,6 +17,11 @@ extern struct dma_map_ops swiotlb_dma_map_ops;
 #define dma_free_noncoherent(d, s, a, h)	\
 		dma_free_coherent((d), (s), (a), (h))
 
+extern bool dma_capable(struct device *dev, dma_addr_t addr, size_t size);
+extern dma_addr_t phys_to_dma(struct device *dev, phys_addr_t paddr);
+extern phys_addr_t dma_to_phys(struct device *dev, dma_addr_t daddr);
+extern void dma_mark_clean(void *addr, size_t size);
+
 #include <asm-generic/dma-mapping-common.h>
 
 #endif /* __ASM_UNICORE64_DMA_MAPPING_H__ */
diff --git a/arch/unicore64/mm/Kconfig b/arch/unicore64/mm/Kconfig
index a9d25a3..72e798b 100644
--- a/arch/unicore64/mm/Kconfig
+++ b/arch/unicore64/mm/Kconfig
@@ -22,3 +22,9 @@ config CPU_DCACHE_DISABLE
 	  Say Y here to disable the processor data cache.
 	  ONLY used when debugging or special circumstance.
 	  It unsure, say N.
+
+config SWIOTLB
+	def_bool y
+
+config NEED_SG_DMA_LENGTH
+	def_bool SWIOTLB
diff --git a/arch/unicore64/mm/Makefile b/arch/unicore64/mm/Makefile
index 2b21894..57208e2 100644
--- a/arch/unicore64/mm/Makefile
+++ b/arch/unicore64/mm/Makefile
@@ -1 +1,2 @@
 obj-y				:= mmu.o pgtable.o ioremap.o init.o
+obj-$(CONFIG_SWIOTLB)		+= dma-swiotlb.o
diff --git a/arch/unicore64/mm/dma-swiotlb.c b/arch/unicore64/mm/dma-swiotlb.c
new file mode 100644
index 0000000..11321cb
--- /dev/null
+++ b/arch/unicore64/mm/dma-swiotlb.c
@@ -0,0 +1,68 @@
+#include <linux/pci.h>
+#include <linux/cache.h>
+#include <linux/module.h>
+#include <linux/dma-mapping.h>
+#include <linux/swiotlb.h>
+#include <linux/bootmem.h>
+
+#include <asm/dma.h>
+
+/**
+ * dma_capable() -
+ * @dev:
+ * @addr:
+ * @size:
+ */
+bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)
+{
+	/* FIXME */
+	BUG();
+}
+
+/**
+ * phys_to_dma() -
+ * @dev:
+ * @paddr:
+ */
+dma_addr_t phys_to_dma(struct device *dev, phys_addr_t paddr)
+{
+	/* FIXME */
+	BUG();
+}
+
+/**
+ * dma_to_phys() -
+ * @dev:
+ * @daddr:
+ */
+phys_addr_t dma_to_phys(struct device *dev, dma_addr_t daddr)
+{
+	/* FIXME */
+	BUG();
+}
+
+/**
+ * dma_mark_clean() -
+ * @addr:
+ * @size:
+ */
+void dma_mark_clean(void *addr, size_t size)
+{
+	/* FIXME */
+	BUG();
+}
+
+struct dma_map_ops swiotlb_dma_map_ops = {
+	.alloc_coherent = swiotlb_alloc_coherent,
+	.free_coherent = swiotlb_free_coherent,
+	.map_sg = swiotlb_map_sg_attrs,
+	.unmap_sg = swiotlb_unmap_sg_attrs,
+	.dma_supported = swiotlb_dma_supported,
+	.map_page = swiotlb_map_page,
+	.unmap_page = swiotlb_unmap_page,
+	.sync_single_for_cpu = swiotlb_sync_single_for_cpu,
+	.sync_single_for_device = swiotlb_sync_single_for_device,
+	.sync_sg_for_cpu = swiotlb_sync_sg_for_cpu,
+	.sync_sg_for_device = swiotlb_sync_sg_for_device,
+	.mapping_error = swiotlb_dma_mapping_error,
+};
-- 
1.7.9.5

