From 3a0a22fcefe7d62ff72e04e7df274b0056d9aa6e Mon Sep 17 00:00:00 2001
From: LiangRongrong <Liangrongrong@mprc.pku.edu.cn>
Date: Tue, 22 Nov 2011 16:56:56 +0800
Subject: [PATCH 082/641] UniCore64: Change some definitions in asm pgtable.h

Signed-off-by: Liang Rongrong <liangrongrong@mprc.pku.edu.cn>
---
 arch/unicore64/include/asm/pgtable.h |   63 +++++++++++++++++-----------------
 1 file changed, 32 insertions(+), 31 deletions(-)

diff --git a/arch/unicore64/include/asm/pgtable.h b/arch/unicore64/include/asm/pgtable.h
index ea6a04f..65ba934 100644
--- a/arch/unicore64/include/asm/pgtable.h
+++ b/arch/unicore64/include/asm/pgtable.h
@@ -2,8 +2,9 @@
 #define __ASM_UNICORE64_PGTABLE_H__
 
 #include <asm-generic/pgtable-nopud.h>
-#include <asm/pgtable-hwdef.h>
+#include <arch/hwdef-pgtable.h>
 
+#define PTE_FILE		PTE_YOUNG	/* only when !PRESENT */
 /* FIXME */
 #define VMALLOC_START		_AC(0x0000000100000000, UL)
 #define VMALLOC_END		_AC(0x0000000200000000, UL)
@@ -50,30 +51,30 @@ static inline pte_t *pte_offset_kernel(pmd_t *pmd, unsigned long address)
 #define pte_offset_map(dir, addr)	pte_offset_kernel((dir), (addr))
 #define pte_unmap(pte)			do { } while (0)
 
-#define PAGE_KERNEL		__pgprot(UC64_L3_READ | UC64_L3_WRITE	\
-					| UC64_L3_EXEC | UC64_L3_DIRTY	\
-					| UC64_L3_EXIST | UC64_L3_YOUNG	\
-					| UC64_L3_CACHE)
+#define PAGE_KERNEL		__pgprot(PTE_READ | PTE_WRITE   \
+					| PTE_EXEC | PTE_DIRTY  \
+					| PTE_EXIST | PTE_YOUNG \
+					| PTE_TYPE_CACHE)
 
 /* FIXME: if READ is needed when WRITE or EXEC, otherwise, modify VM_flags */
-#define arch_vm_get_page_prot(vm_flags)	__pgprot(UC64_L3_EXIST | UC64_L3_CACHE)
+#define arch_vm_get_page_prot(vm_flags)	__pgprot(PTE_EXIST | PTE_TYPE_CACHE)
 #define __P000		__pgprot(0)
-#define __P001		__pgprot(UC64_L3_READ)
+#define __P001		__pgprot(PTE_READ)
 #define __P010		__pgprot(0)
-#define __P011		__pgprot(UC64_L3_READ)
-#define __P100		__pgprot(UC64_L3_EXEC)
-#define __P101		__pgprot(UC64_L3_EXEC | UC64_L3_READ)
-#define __P110		__pgprot(UC64_L3_EXEC)
-#define __P111		__pgprot(UC64_L3_EXEC | UC64_L3_READ)
+#define __P011		__pgprot(PTE_READ)
+#define __P100		__pgprot(PTE_EXEC)
+#define __P101		__pgprot(PTE_EXEC | PTE_READ)
+#define __P110		__pgprot(PTE_EXEC)
+#define __P111		__pgprot(PTE_EXEC | PTE_READ)
 
 #define __S000		__pgprot(0)
-#define __S001		__pgprot(UC64_L3_READ)
-#define __S010		__pgprot(UC64_L3_WRITE)
-#define __S011		__pgprot(UC64_L3_WRITE | UC64_L3_READ)
-#define __S100		__pgprot(UC64_L3_EXEC)
-#define __S101		__pgprot(UC64_L3_EXEC | UC64_L3_READ)
-#define __S110		__pgprot(UC64_L3_EXEC | UC64_L3_WRITE)
-#define __S111		__pgprot(UC64_L3_EXEC | UC64_L3_WRITE | UC64_L3_READ)
+#define __S001		__pgprot(PTE_READ)
+#define __S010		__pgprot(PTE_WRITE)
+#define __S011		__pgprot(PTE_WRITE | PTE_READ)
+#define __S100		__pgprot(PTE_EXEC)
+#define __S101		__pgprot(PTE_EXEC | PTE_READ)
+#define __S110		__pgprot(PTE_EXEC | PTE_WRITE)
+#define __S111		__pgprot(PTE_EXEC | PTE_WRITE | PTE_READ)
 
 #define pte_modify(pte, newprot)	__pte({BUG(); 0; })
 
@@ -92,8 +93,8 @@ extern struct page *empty_zero_page;
 #define pud_bad(pud)		(!pud_val(pud))
 #define pmd_bad(pmd)		(!pmd_val(pmd))
 #define pud_present(pud)	(pud_val(pud))
-#define pmd_present(pmd)	(pmd_val(pmd) & UC64_L2_EXIST)
-#define pte_present(pte)	(pte_val(pte) & UC64_L3_EXIST)
+#define pmd_present(pmd)	(pmd_val(pmd) & PMD_EXIST)
+#define pte_present(pte)	(pte_val(pte) & PTE_EXIST)
 
 extern void set_pte(pte_t *ptep, pte_t pteval);
 #define set_pte_at(mm, addr, ptep, pteval)	set_pte(ptep, pteval)
@@ -108,17 +109,17 @@ extern void set_pte(pte_t *ptep, pte_t pteval);
 #define pte_page(pte)		pfn_to_page(pte_pfn(pte))
 #define pmd_pgtable(pmd)	pmd_page(pmd)
 
-#define pte_write(pte)		(pte_val(pte) & UC64_L3_WRITE)
-#define pte_dirty(pte)		(pte_val(pte) & UC64_L3_DIRTY)
-#define pte_young(pte)		(pte_val(pte) & UC64_L3_YOUNG)
+#define pte_write(pte)		(pte_val(pte) & PTE_WRITE)
+#define pte_dirty(pte)		(pte_val(pte) & PTE_DIRTY)
+#define pte_young(pte)		(pte_val(pte) & PTE_YOUNG)
 #define pte_special(pte)	(0)
 
-#define pte_wrprotect(pte)	(__pte(pte_val(pte) & ~UC64_L3_WRITE))
-#define pte_mkwrite(pte)	(__pte(pte_val(pte) | UC64_L3_WRITE))
-#define pte_mkclean(pte)	(__pte(pte_val(pte) & ~UC64_L3_DIRTY))
-#define pte_mkdirty(pte)	(__pte(pte_val(pte) | UC64_L3_DIRTY))
-#define pte_mkold(pte)		(__pte(pte_val(pte) & ~UC64_L3_YOUNG))
-#define pte_mkyoung(pte)	(__pte(pte_val(pte) | UC64_L3_YOUNG))
+#define pte_wrprotect(pte)	(__pte(pte_val(pte) & ~PTE_WRITE))
+#define pte_mkwrite(pte)	(__pte(pte_val(pte) | PTE_WRITE))
+#define pte_mkclean(pte)	(__pte(pte_val(pte) & ~PTE_DIRTY))
+#define pte_mkdirty(pte)	(__pte(pte_val(pte) | PTE_DIRTY))
+#define pte_mkold(pte)		(__pte(pte_val(pte) & ~PTE_YOUNG))
+#define pte_mkyoung(pte)	(__pte(pte_val(pte) | PTE_YOUNG))
 #define pte_mkspecial(pte)	(pte)
 
 #define pgtable_cache_init()		do { } while (0)
@@ -135,7 +136,7 @@ extern void set_pte(pte_t *ptep, pte_t pteval);
 #define __pte_to_swp_entry(pte)		((swp_entry_t) { pte_val(pte) })
 #define __swp_entry_to_pte(swp)		((pte_t) { (swp).val })
 
-#define pte_file(pte)			(pte_val(pte) & UC64_L3_FILE)
+#define pte_file(pte)			(pte_val(pte) & PTE_FILE)
 #define pte_to_pgoff(x)			({BUG(); 0; })
 #define pgoff_to_pte(x)			__pte({BUG(); 0; })
 
-- 
1.7.9.5

