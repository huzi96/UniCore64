From 90f9122279d9dc159b610ff257f793ae25521f16 Mon Sep 17 00:00:00 2001
From: CaoSong <caosong@mprc.pku.edu.cn>
Date: Thu, 8 Dec 2011 15:51:36 +0800
Subject: [PATCH 126/641] UniCore64: Modify kernel cpu-uc64.c

Change "ucv3" to "uc64" in cpu-uc64.c file, and also add the comment
to each function in it.
Signed-off-by: Cao Song <caosong@mprc.pku.edu.cn>
---
 arch/unicore64/kernel/cpu-uc64.c |   76 +++++++++++++++++++++++++-------------
 1 file changed, 50 insertions(+), 26 deletions(-)

diff --git a/arch/unicore64/kernel/cpu-uc64.c b/arch/unicore64/kernel/cpu-uc64.c
index 844834c..cb5e335 100644
--- a/arch/unicore64/kernel/cpu-uc64.c
+++ b/arch/unicore64/kernel/cpu-uc64.c
@@ -2,60 +2,84 @@
 #include <linux/seq_file.h>
 
 /**
- * cpu_ucv3_show() -
- * @m:
- * @v:
+ * cpu_uc64_show() - show the UniCore64 cpu information
+ * @m:		sequence file to output
+ * @v:		a pos point for the sequence file
+ *
+ * Return code:
+ * return int type to record the true or false information.
+ * 0 - true; not 0 - error.
+ *
+ * To show the feature of the UniCore64 cpu and cache.
  */
-static int cpu_ucv3_show(struct seq_file *m, void *v)
+static int cpu_uc64_show(struct seq_file *m, void *v)
 {
+
 	/* FIXME */
 	BUG();
+
 	return 0;
 }
 
 /**
- * cpu_ucv3_start() -
- * @m:
- * @pos:
+ * cpu_uc64_start() - do init work to the sequence file
+ * @m:		sequence file to operate
+ * @pos:	the position point for the sequence file
+ *
+ * Return code:
+ * return a void point of the file's position
+ *
+ * Do some initial work for the operation of the sequence file.
  */
-static void *cpu_ucv3_start(struct seq_file *m, loff_t *pos)
+static void *cpu_uc64_start(struct seq_file *m, loff_t *pos)
 {
 	/* FIXME */
 	BUG();
+
+	return NULL;
 }
 
 /**
- * cpu_ucv3_next() -
- * @v:
- * @pos:
+ * cpu_uc64_next() - add the position index for the next data object
+ * @m:		sequence file to operate
+ * @v:		the index point
+ * @pos:	the position point for the sequence file
+ *
+ * Return code:
+ * return a NULL point.
+ *
+ * Add the position index to access the next data object in the sequence
+ * file.
  */
-static void *cpu_ucv3_next(struct seq_file *m, void *v, loff_t *pos)
+static void *cpu_uc64_next(struct seq_file *m, void *v, loff_t *pos)
 {
 	/* FIXME */
 	BUG();
+
+	return NULL;
 }
 
 /**
- * cpu_ucv3_stop() -
- * @m:
- * @v:
+ * cpu_uc64_stop() - do clean work after finishing the access
+ * @m:		sequence file to operate
+ * @v:		the index point
+ *
+ * Do some clean work after finishing the access to the sequence file.
  */
-static void cpu_ucv3_stop(struct seq_file *m, void *v)
+static void cpu_uc64_stop(struct seq_file *m, void *v)
 {
 	/* FIXME */
 	BUG();
 }
 
-/**
- * struct cpuinfo_op -
- * @start:
- * @next:
- * @stop:
- * @show:
+/*
+ * cpuinfo_op is a variable of struct seq_operations type. It's member is
+ * the operation for the UniCore cpu information, such as start, next, stop
+ * and show.
  */
 const struct seq_operations cpuinfo_op = {
-	.start	= cpu_ucv3_start,
-	.next	= cpu_ucv3_next,
-	.stop	= cpu_ucv3_stop,
-	.show	= cpu_ucv3_show
+	.start	= cpu_uc64_start,
+	.next	= cpu_uc64_next,
+	.stop	= cpu_uc64_stop,
+	.show	= cpu_uc64_show
 };
-- 
1.7.9.5

