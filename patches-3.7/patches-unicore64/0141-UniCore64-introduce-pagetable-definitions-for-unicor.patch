From a37cec63c985e42ee62713fc493d09dc7519fae8 Mon Sep 17 00:00:00 2001
From: GuanXuetao <gxt@mprc.pku.edu.cn>
Date: Sat, 10 Dec 2011 13:40:34 +0800
Subject: [PATCH 141/641] UniCore64: introduce pagetable definitions for
 unicore64 arch

Signed-off-by: GuanXuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/include/arch/hwdef-pgtable.h |   42 +++++++++++++--------------
 arch/unicore64/include/asm/pgtable.h        |   12 ++++++++
 2 files changed, 33 insertions(+), 21 deletions(-)

diff --git a/arch/unicore64/include/arch/hwdef-pgtable.h b/arch/unicore64/include/arch/hwdef-pgtable.h
index 5278b34..0261e68 100644
--- a/arch/unicore64/include/arch/hwdef-pgtable.h
+++ b/arch/unicore64/include/arch/hwdef-pgtable.h
@@ -4,10 +4,31 @@
 #include <arch/bitfield.h>
 
 /* Hardware address translation and page table definitions. */
+/*
+ * 3-level translation table walking: 9+9+9+12
+ * UC64_PGTBL_ENTRY_BITS: the logarithm of the size of pagetable entry space,
+ * which is the same for PGD/PMD/PTE, i.e., 8 bytes.
+ */
+#define UC64_PGTBL_ENTRY_BITS	(3)
+
 #define UC64_PAGE_BITS		(12)
 #define UC64_PAGE_SIZE		BFSIZE(UC64_PAGE_BITS)
 #define UC64_PAGE_MASK		BFMASK(UC64_PAGE_BITS, 0)
 
+#define UC64_PTE_BITS		(UC64_PAGE_BITS - UC64_PGTBL_ENTRY_BITS)
+#define UC64_PTE_SIZE		BFSIZE(UC64_PTE_BITS)
+#define UC64_PTE_MASK		BFMASK(UC64_PTE_BITS, UC64_PAGE_BITS)
+
+#define UC64_PMD_BITS		(UC64_PAGE_BITS - UC64_PGTBL_ENTRY_BITS)
+#define UC64_PMD_SHIFT		(UC64_PAGE_BITS + UC64_PTE_BITS)
+#define UC64_PMD_SIZE		BFSIZE(UC64_PMD_SHIFT)
+#define UC64_PMD_MASK		BFMASK(UC64_PMD_BITS, UC64_PMD_SHIFT)
+
+#define UC64_PGD_BITS		(UC64_PAGE_BITS - UC64_PGTBL_ENTRY_BITS)
+#define UC64_PGD_SHIFT		(UC64_PMD_SHIFT + UC64_PGD_BITS)
+#define UC64_PGD_SIZE		BFSIZE(UC64_PGD_SHIFT)
+#define UC64_PGD_MASK		BFMASK(UC64_PGD_BITS, UC64_PGD_SHIFT)
+
 /* Level 1 descriptor (PGD) */
 #define PGD_EXIST		BFIELD(1, 1, 2)
 
@@ -44,25 +65,4 @@
 #define PTE_TYPE_CACHE		BFIELD(2, 2, 9)
 #define PTE_SHARE		BFIELD(1, 1, 11)
 
-/*
- * 3-level translation table walking: 9+9+9+12
- * PGTBL_ENTRYSHIFT: the logarithm of the size of pagetable entry space,
- * which is the same for PGD/PMD/PTE, i.e., 8 bytes.
- */
-#define PGTBL_ENTRYSHIFT	(3)
-
-#define PGDIR_SHIFT		(PAGE_SHIFT				\
-				+ (PAGE_SHIFT - PGTBL_ENTRYSHIFT)	\
-				+ (PAGE_SHIFT - PGTBL_ENTRYSHIFT))
-#define PGDIR_SIZE		(_AC(1, UL) << PGDIR_SHIFT)
-#define PGDIR_MASK		(~(PGDIR_SIZE-1))
-
-#define PMD_SHIFT		(PAGE_SHIFT + (PAGE_SHIFT - PGTBL_ENTRYSHIFT))
-#define PMD_SIZE		(_AC(1, UL) << PMD_SHIFT)
-#define PMD_MASK		(~(PMD_SIZE-1))
-
-#define PTRS_PER_PGD		(1 << (PAGE_SHIFT - PGTBL_ENTRYSHIFT))
-#define PTRS_PER_PMD		(1 << (PAGE_SHIFT - PGTBL_ENTRYSHIFT))
-#define PTRS_PER_PTE		(PAGE_SIZE / sizeof(pte_t))
-
 #endif /* __UNICORE64_ARCH_HWDEF_PGTABLE_H__ */
diff --git a/arch/unicore64/include/asm/pgtable.h b/arch/unicore64/include/asm/pgtable.h
index 3a82af1..abbd4ef 100644
--- a/arch/unicore64/include/asm/pgtable.h
+++ b/arch/unicore64/include/asm/pgtable.h
@@ -11,6 +11,18 @@
 
 #define FIRST_USER_ADDRESS	(0)
 
+#define PGDIR_SHIFT		UC64_PGD_SHIFT
+#define PGDIR_SIZE		UC64_PGD_SIZE
+#define PGDIR_MASK		(~(PGDIR_SIZE-1))
+
+#define PMD_SHIFT		UC64_PMD_SHIFT
+#define PMD_SIZE		UC64_PMD_SIZE
+#define PMD_MASK		(~(PMD_SIZE-1))
+
+#define PTRS_PER_PGD		BFSIZE(UC64_PGD_BITS)
+#define PTRS_PER_PMD		BFSIZE(UC64_PMD_BITS)
+#define PTRS_PER_PTE		BFSIZE(UC64_PTE_BITS)
+
 extern pgd_t swapper_pg_dir[PTRS_PER_PGD];
 
 #define pgd_index(addr)		(((addr) >> PGDIR_SHIFT) & (PTRS_PER_PGD - 1))
-- 
1.7.9.5

