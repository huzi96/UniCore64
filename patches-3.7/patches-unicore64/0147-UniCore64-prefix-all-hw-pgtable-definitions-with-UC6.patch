From 386ae3a26b8cef15e2ce74fbbec7d052a5b2bdba Mon Sep 17 00:00:00 2001
From: GuanXuetao <gxt@mprc.pku.edu.cn>
Date: Sat, 10 Dec 2011 14:51:58 +0800
Subject: [PATCH 147/641] UniCore64: prefix all hw pgtable definitions with
 UC64_

Signed-off-by: GuanXuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/include/arch/hwdef-pgtable.h |   60 +++++++++++++--------------
 arch/unicore64/include/asm/pgtable-prot.h   |   33 ++++++++-------
 arch/unicore64/include/asm/pgtable-swap.h   |    4 +-
 arch/unicore64/include/asm/pgtable.h        |   22 +++++-----
 4 files changed, 60 insertions(+), 59 deletions(-)

diff --git a/arch/unicore64/include/arch/hwdef-pgtable.h b/arch/unicore64/include/arch/hwdef-pgtable.h
index 0261e68..1d97308 100644
--- a/arch/unicore64/include/arch/hwdef-pgtable.h
+++ b/arch/unicore64/include/arch/hwdef-pgtable.h
@@ -30,39 +30,39 @@
 #define UC64_PGD_MASK		BFMASK(UC64_PGD_BITS, UC64_PGD_SHIFT)
 
 /* Level 1 descriptor (PGD) */
-#define PGD_EXIST		BFIELD(1, 1, 2)
+#define UC64_PGD_EXIST		BFIELD(1, 1, 2)
 
 /* Level 2 descriptor (PMD) */
-#define PMD_SUPER		BFIELD(1, 1, 0)
-#define PMD_USER		BFIELD(1, 1, 1)
-#define PMD_EXIST		BFIELD(1, 1, 2)
-#define PMD_YOUNG		BFIELD(1, 1, 3)
-#define PMD_DIRTY		BFIELD(1, 1, 4)
-#define PMD_EXEC		BFIELD(1, 1, 5)
-#define PMD_WRITE		BFIELD(1, 1, 6)
-#define PMD_READ		BFIELD(1, 1, 7)
-#define PMD_RWX			(PMD_READ | PMD_WRITE | PMD_EXEC)
-#define PMD_GLOBAL		BFIELD(1, 1, 8)
-#define PMD_TYPE_MASK		BFMASK(2, 9)
-#define PMD_TYPE_IO		BFIELD(0, 2, 9)
-#define PMD_TYPE_NOCACHE	BFIELD(1, 2, 9)
-#define PMD_TYPE_CACHE		BFIELD(2, 2, 9)
-#define PMD_SHARE		BFIELD(1, 1, 11)
+#define UC64_PMD_SUPER		BFIELD(1, 1, 0)
+#define UC64_PMD_USER		BFIELD(1, 1, 1)
+#define UC64_PMD_EXIST		BFIELD(1, 1, 2)
+#define UC64_PMD_YOUNG		BFIELD(1, 1, 3)
+#define UC64_PMD_DIRTY		BFIELD(1, 1, 4)
+#define UC64_PMD_EXEC		BFIELD(1, 1, 5)
+#define UC64_PMD_WRITE		BFIELD(1, 1, 6)
+#define UC64_PMD_READ		BFIELD(1, 1, 7)
+#define UC64_PMD_RWX		BFMASK(3, 5)
+#define UC64_PMD_GLOBAL		BFIELD(1, 1, 8)
+#define UC64_PMD_TYPE_MASK	BFMASK(2, 9)
+#define UC64_PMD_TYPE_IO	BFIELD(0, 2, 9)
+#define UC64_PMD_TYPE_NOCACHE	BFIELD(1, 2, 9)
+#define UC64_PMD_TYPE_CACHE	BFIELD(2, 2, 9)
+#define UC64_PMD_SHARE		BFIELD(1, 1, 11)
 
 /* Level 3 descriptor (PTE) */
-#define PTE_USER		BFIELD(1, 1, 1)
-#define PTE_EXIST		BFIELD(1, 1, 2)
-#define PTE_YOUNG		BFIELD(1, 1, 3)
-#define PTE_DIRTY		BFIELD(1, 1, 4)
-#define PTE_EXEC		BFIELD(1, 1, 5)
-#define PTE_WRITE		BFIELD(1, 1, 6)
-#define PTE_READ		BFIELD(1, 1, 7)
-#define PTE_RWX			(PTE_READ | PTE_WRITE | PTE_EXEC)
-#define PTE_GLOBAL		BFIELD(1, 1, 8)
-#define PTE_TYPE_MASK		BFMASK(2, 9)
-#define PTE_TYPE_IO		BFIELD(0, 2, 9)
-#define PTE_TYPE_NOCACHE	BFIELD(1, 2, 9)
-#define PTE_TYPE_CACHE		BFIELD(2, 2, 9)
-#define PTE_SHARE		BFIELD(1, 1, 11)
+#define UC64_PTE_USER		BFIELD(1, 1, 1)
+#define UC64_PTE_EXIST		BFIELD(1, 1, 2)
+#define UC64_PTE_YOUNG		BFIELD(1, 1, 3)
+#define UC64_PTE_DIRTY		BFIELD(1, 1, 4)
+#define UC64_PTE_EXEC		BFIELD(1, 1, 5)
+#define UC64_PTE_WRITE		BFIELD(1, 1, 6)
+#define UC64_PTE_READ		BFIELD(1, 1, 7)
+#define UC64_PTE_RWX		BFMASK(3, 5)
+#define UC64_PTE_GLOBAL		BFIELD(1, 1, 8)
+#define UC64_PTE_TYPE_MASK	BFMASK(2, 9)
+#define UC64_PTE_TYPE_IO	BFIELD(0, 2, 9)
+#define UC64_PTE_TYPE_NOCACHE	BFIELD(1, 2, 9)
+#define UC64_PTE_TYPE_CACHE	BFIELD(2, 2, 9)
+#define UC64_PTE_SHARE		BFIELD(1, 1, 11)
 
 #endif /* __UNICORE64_ARCH_HWDEF_PGTABLE_H__ */
diff --git a/arch/unicore64/include/asm/pgtable-prot.h b/arch/unicore64/include/asm/pgtable-prot.h
index 5dcf387..ee47fe5 100644
--- a/arch/unicore64/include/asm/pgtable-prot.h
+++ b/arch/unicore64/include/asm/pgtable-prot.h
@@ -5,26 +5,27 @@
 #include <asm/page.h>
 #include <arch/hwdef-pgtable.h>
 
-#define PAGE_KERNEL	__pgprot(PTE_RWX | PTE_DIRTY | PTE_EXIST | PTE_YOUNG \
-					| PTE_TYPE_CACHE)
+#define PAGE_KERNEL	__pgprot(UC64_PTE_RWX | UC64_PTE_DIRTY		\
+		| UC64_PTE_EXIST | UC64_PTE_YOUNG | UC64_PTE_TYPE_CACHE)
 
 /* FIXME: if READ is needed when WRITE or EXEC, otherwise, modify VM_flags */
-#define arch_vm_get_page_prot(vm_flags)	__pgprot(PTE_EXIST | PTE_TYPE_CACHE)
+#define arch_vm_get_page_prot(vm_flags)			\
+		__pgprot(UC64_PTE_EXIST | UC64_PTE_TYPE_CACHE)
 
 #define __P000		__pgprot(0)
-#define __P001		__pgprot(PTE_READ)
+#define __P001		__pgprot(UC64_PTE_READ)
 #define __P010		__pgprot(0)
-#define __P011		__pgprot(PTE_READ)
-#define __P100		__pgprot(PTE_EXEC)
-#define __P101		__pgprot(PTE_EXEC | PTE_READ)
-#define __P110		__pgprot(PTE_EXEC)
-#define __P111		__pgprot(PTE_EXEC | PTE_READ)
+#define __P011		__pgprot(UC64_PTE_READ)
+#define __P100		__pgprot(UC64_PTE_EXEC)
+#define __P101		__pgprot(UC64_PTE_EXEC | UC64_PTE_READ)
+#define __P110		__pgprot(UC64_PTE_EXEC)
+#define __P111		__pgprot(UC64_PTE_EXEC | UC64_PTE_READ)
 
 #define __S000		__pgprot(0)
-#define __S001		__pgprot(PTE_READ)
-#define __S010		__pgprot(PTE_WRITE)
-#define __S011		__pgprot(PTE_WRITE | PTE_READ)
-#define __S100		__pgprot(PTE_EXEC)
-#define __S101		__pgprot(PTE_EXEC | PTE_READ)
-#define __S110		__pgprot(PTE_EXEC | PTE_WRITE)
-#define __S111		__pgprot(PTE_RWX)
+#define __S001		__pgprot(UC64_PTE_READ)
+#define __S010		__pgprot(UC64_PTE_WRITE)
+#define __S011		__pgprot(UC64_PTE_WRITE | UC64_PTE_READ)
+#define __S100		__pgprot(UC64_PTE_EXEC)
+#define __S101		__pgprot(UC64_PTE_EXEC | UC64_PTE_READ)
+#define __S110		__pgprot(UC64_PTE_EXEC | UC64_PTE_WRITE)
+#define __S111		__pgprot(UC64_PTE_RWX)
diff --git a/arch/unicore64/include/asm/pgtable-swap.h b/arch/unicore64/include/asm/pgtable-swap.h
index 35a9dc3..16b35b2 100644
--- a/arch/unicore64/include/asm/pgtable-swap.h
+++ b/arch/unicore64/include/asm/pgtable-swap.h
@@ -2,7 +2,7 @@
 #error "This file is included ONLY in asm/pgtable.h"
 #endif
 
-#define PTE_FILE			PTE_YOUNG /* only when !PRESENT */
+#define UC64_PTE_FILE			UC64_PTE_YOUNG /* only when !PRESENT */
 #define PTE_FILE_MAX_BITS		36 /* FIXME */
 
 #define __swp_type(x)			({BUG(); 0; })
@@ -11,6 +11,6 @@
 #define __pte_to_swp_entry(pte)		((swp_entry_t) { pte_val(pte) })
 #define __swp_entry_to_pte(swp)		((pte_t) { (swp).val })
 
-#define pte_file(pte)			(pte_val(pte) & PTE_FILE)
+#define pte_file(pte)			(pte_val(pte) & UC64_PTE_FILE)
 #define pte_to_pgoff(x)			({BUG(); 0; })
 #define pgoff_to_pte(x)			__pte({BUG(); 0; })
diff --git a/arch/unicore64/include/asm/pgtable.h b/arch/unicore64/include/asm/pgtable.h
index eaf2824..084aa65 100644
--- a/arch/unicore64/include/asm/pgtable.h
+++ b/arch/unicore64/include/asm/pgtable.h
@@ -61,8 +61,8 @@ extern struct page *empty_zero_page;
 #define pud_bad(pud)		(!pud_val(pud))
 #define pmd_bad(pmd)		(!pmd_val(pmd))
 #define pud_present(pud)	(pud_val(pud))
-#define pmd_present(pmd)	(pmd_val(pmd) & PMD_EXIST)
-#define pte_present(pte)	(pte_val(pte) & PTE_EXIST)
+#define pmd_present(pmd)	(pmd_val(pmd) & UC64_PMD_EXIST)
+#define pte_present(pte)	(pte_val(pte) & UC64_PTE_EXIST)
 
 extern void set_pte(pte_t *ptep, pte_t pteval);
 #define set_pte_at(mm, addr, ptep, pteval)	set_pte(ptep, pteval)
@@ -77,17 +77,17 @@ extern void set_pte(pte_t *ptep, pte_t pteval);
 #define pte_page(pte)		pfn_to_page(pte_pfn(pte))
 #define pmd_pgtable(pmd)	pmd_page(pmd)
 
-#define pte_write(pte)		(pte_val(pte) & PTE_WRITE)
-#define pte_dirty(pte)		(pte_val(pte) & PTE_DIRTY)
-#define pte_young(pte)		(pte_val(pte) & PTE_YOUNG)
+#define pte_write(pte)		(pte_val(pte) & UC64_PTE_WRITE)
+#define pte_dirty(pte)		(pte_val(pte) & UC64_PTE_DIRTY)
+#define pte_young(pte)		(pte_val(pte) & UC64_PTE_YOUNG)
 #define pte_special(pte)	(0)
 
-#define pte_wrprotect(pte)	(__pte(pte_val(pte) & ~PTE_WRITE))
-#define pte_mkwrite(pte)	(__pte(pte_val(pte) | PTE_WRITE))
-#define pte_mkclean(pte)	(__pte(pte_val(pte) & ~PTE_DIRTY))
-#define pte_mkdirty(pte)	(__pte(pte_val(pte) | PTE_DIRTY))
-#define pte_mkold(pte)		(__pte(pte_val(pte) & ~PTE_YOUNG))
-#define pte_mkyoung(pte)	(__pte(pte_val(pte) | PTE_YOUNG))
+#define pte_wrprotect(pte)	(__pte(pte_val(pte) & ~UC64_PTE_WRITE))
+#define pte_mkwrite(pte)	(__pte(pte_val(pte) | UC64_PTE_WRITE))
+#define pte_mkclean(pte)	(__pte(pte_val(pte) & ~UC64_PTE_DIRTY))
+#define pte_mkdirty(pte)	(__pte(pte_val(pte) | UC64_PTE_DIRTY))
+#define pte_mkold(pte)		(__pte(pte_val(pte) & ~UC64_PTE_YOUNG))
+#define pte_mkyoung(pte)	(__pte(pte_val(pte) | UC64_PTE_YOUNG))
 #define pte_mkspecial(pte)	(pte)
 
 #define pgtable_cache_init()		do { } while (0)
-- 
1.7.9.5

