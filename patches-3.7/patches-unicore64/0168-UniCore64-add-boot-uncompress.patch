From 8673ba3793e52b1909b3845a2600d9b4b23b6cfa Mon Sep 17 00:00:00 2001
From: Yu Yue <yuyue@mprc.pku.edu.cn>
Date: Wed, 14 Dec 2011 15:08:40 +0800
Subject: [PATCH 168/641] UniCore64: add boot uncompress

Signed-off-by: Yu Yue <yuyue@mprc.pku.edu.cn>
---
 arch/unicore64/boot/uncompress.c |   73 ++++++++++++++++++++++++++++++++++++++
 arch/unicore64/boot/uncompress.h |   29 +++++++++++++++
 2 files changed, 102 insertions(+)
 create mode 100644 arch/unicore64/boot/uncompress.c
 create mode 100644 arch/unicore64/boot/uncompress.h

diff --git a/arch/unicore64/boot/uncompress.c b/arch/unicore64/boot/uncompress.c
new file mode 100644
index 0000000..993cdef
--- /dev/null
+++ b/arch/unicore64/boot/uncompress.c
@@ -0,0 +1,73 @@
+#include <asm/unaligned.h>
+#include "uncompress.h"
+
+unsigned char *output_data;
+unsigned long output_ptr;
+
+unsigned int free_mem_ptr;
+unsigned int free_mem_end_ptr;
+
+/**
+ * error() - print error information.
+ * @x: error information
+ *
+ * It will print the error information, then halt.
+ */
+static void error(char *x)
+{
+	arch_decomp_puts("\n\n");
+	arch_decomp_puts(x);
+	arch_decomp_puts("\n\n -- System halted");
+
+	arch_decomp_error(x);
+
+	for (;;)
+		;
+}
+
+/**
+ * Heap size should be adjusted for different decompress method
+ */
+#ifdef CONFIG_KERNEL_GZIP
+#include "../../../../lib/decompress_inflate.c"
+#endif
+
+#ifdef CONFIG_KERNEL_BZIP2
+#include "../../../../lib/decompress_bunzip2.c"
+#endif
+
+#ifdef CONFIG_KERNEL_LZO
+#include "../../../../lib/decompress_unlzo.c"
+#endif
+
+#ifdef CONFIG_KERNEL_LZMA
+#include "../../../../lib/decompress_unlzma.c"
+#endif
+
+/**
+ * decompress_kernel() - Decompress the kernel image
+ * @output_start: the address of kernel output
+ * @free_mem_ptr_p: the pointer of free memory
+ * @free_mem_ptr_end_p: the pointer of the end of free memory
+ */
+unsigned long decompress_kernel(unsigned long output_start,
+		unsigned long free_mem_ptr_p,
+		unsigned long free_mem_ptr_end_p)
+{
+	unsigned char *tmp;
+
+	output_data		= (unsigned char *)output_start;
+	free_mem_ptr		= free_mem_ptr_p;
+	free_mem_end_ptr	= free_mem_ptr_end_p;
+
+	arch_decomp_setup();
+
+	tmp = (unsigned char *) (((unsigned long)input_data_end) - 4);
+	output_ptr = get_unaligned_le32(tmp);
+
+	arch_decomp_puts("Uncompressing Linux...");
+	decompress(input_data, input_data_end - input_data, NULL, NULL,
+			output_data, NULL, error);
+	arch_decomp_puts(" done, booting the kernel.\n");
+	return output_ptr;
+}
diff --git a/arch/unicore64/boot/uncompress.h b/arch/unicore64/boot/uncompress.h
new file mode 100644
index 0000000..cb28180
--- /dev/null
+++ b/arch/unicore64/boot/uncompress.h
@@ -0,0 +1,29 @@
+#ifndef __UNICORE64_BOOT_UNCOMPRESS_H__
+#define __UNICORE64_BOOT_UNCOMPRESS_H__
+
+extern char input_data[];
+extern char input_data_end[];
+extern void uc64_debug_puts(char *);
+
+#define STATIC static
+#define STATIC_RW_DATA	/* non-static please */
+#define ARCH_HAVE_DECOMP_PUTS
+
+/**
+ * arch-dependent implementations
+ */
+#ifndef ARCH_HAVE_DECOMP_PUTS
+#define arch_decomp_puts(p)
+#else
+#define arch_decomp_puts(p)	uc64_debug_puts(p)
+#endif
+
+#ifndef ARCH_HAVE_DECOMP_ERROR
+#define arch_decomp_error(x)
+#endif
+
+#ifndef ARCH_HAVE_DECOMP_SETUP
+#define arch_decomp_setup()
+#endif
+
+#endif /* __UNICORE64_BOOT_UNCOMPRESS_H__ */
-- 
1.7.9.5

