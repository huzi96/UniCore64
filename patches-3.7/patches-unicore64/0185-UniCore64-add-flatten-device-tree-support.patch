From 765a35f7e7869e82ef26ace3d819826560345eaa Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Mon, 2 Jan 2012 13:29:34 +0800
Subject: [PATCH 185/641] UniCore64: add flatten device tree support

Signed-off-by: Yu Yue <yuyue@mprc.pku.edu.cn>
Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/Kconfig                     |    3 +++
 arch/unicore64/include/arch/hwdef-memory.h |    8 ++++++
 arch/unicore64/include/asm/memblock.h      |    4 +++
 arch/unicore64/include/asm/prom.h          |    6 +++++
 arch/unicore64/include/asm/setup_arch.h    |    1 +
 arch/unicore64/kernel/Makefile             |    3 ++-
 arch/unicore64/kernel/devtree.c            |   38 ++++++++++++++++++++++++++++
 arch/unicore64/kernel/setup.c              |   17 +++++++++++--
 8 files changed, 77 insertions(+), 3 deletions(-)
 create mode 100644 arch/unicore64/include/asm/memblock.h
 create mode 100644 arch/unicore64/include/asm/prom.h
 create mode 100644 arch/unicore64/kernel/devtree.c

diff --git a/arch/unicore64/Kconfig b/arch/unicore64/Kconfig
index eb9cb47..b9ee813 100644
--- a/arch/unicore64/Kconfig
+++ b/arch/unicore64/Kconfig
@@ -5,8 +5,11 @@ config UNICORE64
 	select HAVE_KERNEL_BZIP2
 	select HAVE_KERNEL_LZO
 	select HAVE_KERNEL_LZMA
+	select HAVE_MEMBLOCK
 	select ARCH_WANT_FRAME_POINTERS
 	select GENERIC_IRQ_SHOW
+	select OF
+	select OF_EARLY_FLATTREE
 	help
 	  UniCore-64 is 64-bit Instruction Set Architecture,
 	  including a series of low-power-consumption RISC chip
diff --git a/arch/unicore64/include/arch/hwdef-memory.h b/arch/unicore64/include/arch/hwdef-memory.h
index 3764f72..19a9350 100644
--- a/arch/unicore64/include/arch/hwdef-memory.h
+++ b/arch/unicore64/include/arch/hwdef-memory.h
@@ -77,6 +77,14 @@
 #define UC64_VM_KIMAGE_START		UC64_PM2VM(UC64_PM_KIMAGE_START)
 
 /*
+ * The byte offset of the unicore64.dtb in RAM from the start of RAM.
+ * We must make sure that UC64_VM_DTB_START is correctly set.
+ * Currently, we expect the least significant 24 bits to be 0x401000.
+ */
+#define UC64_PM_DTB_START		HEX64(00000000, 00401000)
+#define UC64_VM_DTB_START		UC64_PM2VM(UC64_PM_DTB_START)
+
+/*
  * Physical and virtual address of the initial page table.
  * We place the page tables 4K below UC64_VM_KIMAGE_START.
  */
diff --git a/arch/unicore64/include/asm/memblock.h b/arch/unicore64/include/asm/memblock.h
new file mode 100644
index 0000000..a10701e
--- /dev/null
+++ b/arch/unicore64/include/asm/memblock.h
@@ -0,0 +1,4 @@
+#ifndef __UNICORE64_ASM_MEMBLOCK_H__
+#define __UNICORE64_ASM_MEMBLOCK_H__
+
+#endif /* __UNICORE64_ASM_MEMBLOCK_H__ */
diff --git a/arch/unicore64/include/asm/prom.h b/arch/unicore64/include/asm/prom.h
new file mode 100644
index 0000000..cef81fe
--- /dev/null
+++ b/arch/unicore64/include/asm/prom.h
@@ -0,0 +1,6 @@
+#ifndef __UNICORE64_ASM_PROM_H__
+#define __UNICORE64_ASM_PROM_H__
+
+#include <asm/setup.h>
+
+#endif /* __UNICORE64_ASM_PROM_H__ */
diff --git a/arch/unicore64/include/asm/setup_arch.h b/arch/unicore64/include/asm/setup_arch.h
index 45cdb7d..cfdeeab 100644
--- a/arch/unicore64/include/asm/setup_arch.h
+++ b/arch/unicore64/include/asm/setup_arch.h
@@ -6,6 +6,7 @@
 
 extern void setup_arch_cpuinfo(void);
 extern void setup_arch_memory(void);
+extern void setup_arch_devtree(char *cmdline);
 
 #define UC64_CPUID							\
 	({								\
diff --git a/arch/unicore64/kernel/Makefile b/arch/unicore64/kernel/Makefile
index 9796b21..8449f27 100644
--- a/arch/unicore64/kernel/Makefile
+++ b/arch/unicore64/kernel/Makefile
@@ -7,6 +7,7 @@ obj-y			+= process.o ptrace.o
 obj-y			+= setup.o sys.o
 obj-y			+= time.o traps.o
 
-obj-$(CONFIG_UNICORE64)	+= cpu-uc64.o
+obj-$(CONFIG_UNICORE64)		+= cpu-uc64.o
+obj-$(CONFIG_OF_EARLY_FLATTREE)	+= devtree.o
 
 extra-y			:= vmlinux.lds
diff --git a/arch/unicore64/kernel/devtree.c b/arch/unicore64/kernel/devtree.c
new file mode 100644
index 0000000..714ca05
--- /dev/null
+++ b/arch/unicore64/kernel/devtree.c
@@ -0,0 +1,38 @@
+#include <linux/of_fdt.h>
+#include <linux/memblock.h>
+
+void * __init early_init_dt_alloc_memory_arch(u64 size, u64 align)
+{
+	return __va(memblock_alloc(size, align));
+}
+
+void __init early_init_dt_add_memory_arch(u64 base, u64 size)
+{
+	memblock_add(base, size);
+}
+
+/**
+ * irq_create_of_mapping - Hook to resolve OF irq specifier into a Linux irq#
+ * @controller:
+ * @intspec:
+ * @intsize:
+ *
+ * Currently the mapping mechanism is trivial; simple flat hwirq numbers are
+ * mapped 1:1 onto Linux irq numbers.  Cascaded irq controllers are not
+ * supported.
+ */
+unsigned int irq_create_of_mapping(struct device_node *controller,
+				   const u32 *intspec, unsigned int intsize)
+{
+	return intspec[0];
+}
+
+void __init setup_arch_devtree(char *cmdline)
+{
+	initial_boot_params = (void *)UC64_PM_DTB_START;
+	of_scan_flat_dt(early_init_dt_scan_chosen, cmdline);
+	of_scan_flat_dt(early_init_dt_scan_root, NULL);
+	of_scan_flat_dt(early_init_dt_scan_memory, NULL);
+
+	unflatten_device_tree();
+}
diff --git a/arch/unicore64/kernel/setup.c b/arch/unicore64/kernel/setup.c
index 2e24577..94a9b07 100644
--- a/arch/unicore64/kernel/setup.c
+++ b/arch/unicore64/kernel/setup.c
@@ -1,9 +1,13 @@
 #include <linux/kernel.h>
 #include <linux/init.h>
 #include <linux/notifier.h>
+#include <linux/string.h>
 
+#include <asm/setup.h>
 #include <asm/setup_arch.h>
 
+static char __initdata builtin_cmdline[COMMAND_LINE_SIZE] = CONFIG_CMDLINE;
+
 static int uc64_panic_event(struct notifier_block *this,
 		unsigned long event, void *ptr)
 {
@@ -20,8 +24,17 @@ static struct notifier_block uc64_panic_block = {
 
 static void __init setup_arch_param(char **cmdline_p)
 {
-	/* FIXME */
-	BUG();
+#ifdef CONFIG_OF_EARLY_FLATTREE
+	setup_arch_devtree(boot_command_line);
+#endif
+
+	if (boot_command_line[0]) {
+		strlcat(boot_command_line, " ", COMMAND_LINE_SIZE);
+	}
+	strlcat(boot_command_line, builtin_cmdline, COMMAND_LINE_SIZE);
+
+	strlcpy(builtin_cmdline, boot_command_line, COMMAND_LINE_SIZE);
+	*cmdline_p = builtin_cmdline;
 }
 
 static void __init setup_arch_resource(void)
-- 
1.7.9.5

