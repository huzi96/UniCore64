From 7f95152b3d247d2e1a7a11f37d1875ca6319521f Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Wed, 25 Jan 2012 16:57:28 +0800
Subject: [PATCH 267/641] UniCore64: change MASK in hwdef-cpu.h to SELECT

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/include/arch/head-macros.S |    2 +-
 arch/unicore64/include/arch/hwdef-cpu.h   |   12 ++++++------
 arch/unicore64/include/asm/irqflags.h     |    6 +++---
 arch/unicore64/include/asm/ptrace.h       |    2 +-
 4 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/arch/unicore64/include/arch/head-macros.S b/arch/unicore64/include/arch/head-macros.S
index 51f513a..16e520c 100644
--- a/arch/unicore64/include/arch/head-macros.S
+++ b/arch/unicore64/include/arch/head-macros.S
@@ -13,7 +13,7 @@
  * .... .... ..10 0000
  */
 .macro	__head_initialize, rt
-	dmovl	&rt, #ASR_MODE_PRIV | ASR_INTR_MASK
+	dmovl	&rt, #ASR_MODE_PRIV | ASR_INTR_SELECT
 	dmov	asr, &rt
 	dmov	&rt, #CP0_CTRLREG_DEFAULT
 	movc	CP0_CTRLREG, &rt, #0
diff --git a/arch/unicore64/include/arch/hwdef-cpu.h b/arch/unicore64/include/arch/hwdef-cpu.h
index b6f7075..0fd298c 100644
--- a/arch/unicore64/include/arch/hwdef-cpu.h
+++ b/arch/unicore64/include/arch/hwdef-cpu.h
@@ -14,7 +14,7 @@
  *
  * \\\\lt:programlisting\\\\gt:
  * -
- * ASR_MODE_MASK:	mode state mask
+ * ASR_MODE_SELECT:	mode state mask
  * ASR_MODE_USER:	user state
  * ASR_MODE_PRIV:	privilege state
  * ASR_MODE_DEBUG:	debug state
@@ -22,7 +22,7 @@
  * ASR_T_BIT:		multi processors consistency enable bit
  * ASR_D_BIT:		debug mode enable bit
  * -
- * ASR_INTR_MASK:	interrupt mask
+ * ASR_INTR_SELECT:	interrupt mask
  * ASR_INTR_SMP:	interrupt between multi processors
  * ASR_INTR_LSU:	interrupt about LSU
  * ASR_INTR_ITM:	inner timer interrupt
@@ -32,7 +32,7 @@
  * -
  * \\\\lt:/programlisting\\\\gt:
  */
-#define ASR_MODE_MASK		__BS(3, 0)
+#define ASR_MODE_SELECT		__BS(3, 0)
 #define ASR_MODE_USER		__BF(1, 1, 0)
 #define ASR_MODE_PRIV		__BF(1, 1, 1)
 #define ASR_MODE_DEBUG		__BF(1, 1, 2)
@@ -40,7 +40,7 @@
 #define ASR_T_BIT		__BF(1, 1, 3)
 #define ASR_D_BIT		__BF(1, 1, 4)
 
-#define ASR_INTR_MASK		__BS(6, 5)
+#define ASR_INTR_SELECT		__BS(6, 5)
 #define ASR_INTR_SMP		__BF(1, 1, 5)
 #define ASR_INTR_LSU		__BF(1, 1, 6)
 #define ASR_INTR_ITM		__BF(1, 1, 7)
@@ -54,7 +54,7 @@
  *
  * \\\\lt:programlisting\\\\gt:
  * -
- * AFR_MASK:		AFR flag bit mask
+ * AFR_SELECT:		AFR flag bit mask
  * AFR_V_BIT:		overflow flag bit
  * AFR_C_BIT:		carry flag bit
  * AFR_Z_BIT:		zero flag bit
@@ -62,7 +62,7 @@
  * -
  * \\\\lt:/programlisting\\\\gt:
  */
-#define AFR_MASK		__BS(4, 0)
+#define AFR_SELECT		__BS(4, 0)
 #define AFR_V_BIT		__BF(1, 1, 0)
 #define AFR_C_BIT		__BF(1, 1, 1)
 #define AFR_Z_BIT		__BF(1, 1, 2)
diff --git a/arch/unicore64/include/asm/irqflags.h b/arch/unicore64/include/asm/irqflags.h
index 71e9643..befddf9 100644
--- a/arch/unicore64/include/asm/irqflags.h
+++ b/arch/unicore64/include/asm/irqflags.h
@@ -21,7 +21,7 @@
 
 #include <arch/hwdef-cpu.h>
 
-#define ARCH_IRQ_DISABLED	ASR_INTR_MASK
+#define ARCH_IRQ_DISABLED	ASR_INTR_SELECT
 #define ARCH_IRQ_ENABLED	0x0
 
 /**
@@ -36,7 +36,7 @@ static inline unsigned long arch_local_save_flags(void)
 
 	asm volatile("dmov %0, asr" : "=r" (temp));
 
-	return temp & ASR_INTR_MASK;
+	return temp & ASR_INTR_SELECT;
 }
 
 /**
@@ -53,7 +53,7 @@ static inline void arch_local_irq_restore(unsigned long flags)
 		"dor	%0, %0, %1\n"
 		"dmov	asr, %0"
 		: "=&r" (temp)
-		: "r" (flags), "i" (ASR_INTR_MASK));
+		: "r" (flags), "i" (ASR_INTR_SELECT));
 }
 
 #include <asm-generic/irqflags.h>
diff --git a/arch/unicore64/include/asm/ptrace.h b/arch/unicore64/include/asm/ptrace.h
index f9319d0..9e48126 100644
--- a/arch/unicore64/include/asm/ptrace.h
+++ b/arch/unicore64/include/asm/ptrace.h
@@ -50,7 +50,7 @@ struct pt_regs {
 #include <arch/hwdef-cpu.h>
 
 #define user_mode(regs)			\
-	(((regs)->UC64_ASR & ASR_MODE_MASK) == ASR_MODE_USER)
+	(((regs)->UC64_ASR & ASR_MODE_SELECT) == ASR_MODE_USER)
 
 #endif /* __KERNEL__ */
 
-- 
1.7.9.5

