From 5161387f0430fab68f303bc7a06aec63f801b3f5 Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Sun, 29 Jan 2012 13:07:49 +0800
Subject: [PATCH 273/641] UniCore64: introduce __vec_itrap and __vec_dtrap

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/include/arch/asm-mmuops.h |   11 +++++++++
 arch/unicore64/kernel/entry.S            |   36 ++++++++++++++++++++++++++++--
 2 files changed, 45 insertions(+), 2 deletions(-)

diff --git a/arch/unicore64/include/arch/asm-mmuops.h b/arch/unicore64/include/arch/asm-mmuops.h
index e5e5e6a..abe8abc 100644
--- a/arch/unicore64/include/arch/asm-mmuops.h
+++ b/arch/unicore64/include/arch/asm-mmuops.h
@@ -52,4 +52,15 @@ __ASMMACRO_WRAP(.macro	__set_pgd, rpgd;
 			movc	p0.c2, &rpgd, #0;
 		.endm)
 
+__ASMMACRO_WRAP(.macro	__itrap_status, rtrap;
+			movc	&rtrap, p0.c3, #0;
+		.endm)
+
+__ASMMACRO_WRAP(.macro	__dtrap_status, rtrap;
+			movc	&rtrap, p0.c3, #1;
+		.endm)
+
+__ASMMACRO_WRAP(.macro	__dtrap_addr, raddr;
+			movc	&raddr, p0.c4, #0;
+		.endm)
 #endif /* __UNICORE64_ARCH_ASM_MMUOPS_H__ */
diff --git a/arch/unicore64/kernel/entry.S b/arch/unicore64/kernel/entry.S
index 624c356..fa8f6d1 100644
--- a/arch/unicore64/kernel/entry.S
+++ b/arch/unicore64/kernel/entry.S
@@ -2,6 +2,7 @@
 #include <asm/cache.h>
 #include <arch/asm-common.h>
 #include <arch/asm-debug.h>
+#include <arch/asm-mmuops.h>
 
 	.macro	__priv_context_save
 	/* save all gp registers */
@@ -45,6 +46,37 @@ ENTRY(__vec_invalid)
 	halt		/* no return */
 ENDPROC(__vec_invalid)
 
+ENTRY(__vec_itrap)
+	__priv_context_save
+
+	dmovl		r0,  0xdeaddeaddead000c
+	__putdata	r0, r14, r15
+
+	__itrap_status	r0
+	__putdata	r0, r14, r15
+
+	__putdata	lr, r14, r15
+
+	__priv_context_restore
+	eret
+ENDPROC(__vec_itrap)
+
+ENTRY(__vec_dtrap)
+	__priv_context_save
+
+	dmovl		r0,  0xdeaddeaddead0010
+	__putdata	r0, r14, r15
+
+	__dtrap_status	r0
+	__putdata	r0, r14, r15
+
+	__dtrap_addr	r0
+	__putdata	r0, r14, r15
+
+	__priv_context_restore
+	eret
+ENDPROC(__vec_dtrap)
+
 ENTRY(__vec_int_puv3)
 	__priv_context_save
 
@@ -68,8 +100,8 @@ ENTRY(__vectors_table)
 	call	__vec_invalid	/* 0x00: RESET */
 	call	__vec_invalid	/* 0x04: EEXTN */
 	call	__vec_invalid	/* 0x08: ESWI */
-	call	__vec_invalid	/* 0x0c: ITRAP */
-	call	__vec_invalid	/* 0x10: DTRAP */
+	b	__vec_itrap	/* 0x0c: ITRAP */
+	b	__vec_dtrap	/* 0x10: DTRAP */
 	call	__vec_invalid	/* 0x14: FPU_EXC */
 	call	__vec_invalid	/* 0x18: INT_KERNEL */
 	call	__vec_invalid	/* 0x1c: INT_FAULT */
-- 
1.7.9.5

