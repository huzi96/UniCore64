From 6827af50b8739dacccfd45e936a2e970d72b7dcd Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Mon, 30 Jan 2012 10:05:48 +0800
Subject: [PATCH 277/641] UniCore64: add prefix to coprocessor read/write

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/include/arch/hwdef-copro.h |    8 ++++----
 arch/unicore64/kernel/cpu-uc64.c          |    4 ++--
 arch/unicore64/kernel/time.c              |   14 +++++++-------
 arch/unicore64/kernel/traps.c             |    2 +-
 4 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/arch/unicore64/include/arch/hwdef-copro.h b/arch/unicore64/include/arch/hwdef-copro.h
index c6598c0..e83d85f 100644
--- a/arch/unicore64/include/arch/hwdef-copro.h
+++ b/arch/unicore64/include/arch/hwdef-copro.h
@@ -8,7 +8,7 @@
  */
 #include <linux/stringify.h>
 
-#define read_cp_op(reg, op_no)						\
+#define __read_cp_op(reg, op_no)						\
 	({								\
 		unsigned long __val;					\
 		__asm__("movc	%0, " __stringify(reg)			\
@@ -17,14 +17,14 @@
 		__val;							\
 	})
 
-#define write_cp_op(reg_value, reg, op_no)				\
+#define __write_cp_op(reg_value, reg, op_no)				\
 	({								\
 		__asm__("movc	" __stringify(reg)			\
 			", %0, #" __stringify(op_no)			\
 		    : : "r" (reg_value));				\
 	})
 
-#define read_cp(rn)		read_cp_op(rn, 0)
-#define write_cp(v, rn)		write_cp_op(v, rn, 0)
+#define __read_cp(rn)		__read_cp_op(rn, 0)
+#define __write_cp(v, rn)	__write_cp_op(v, rn, 0)
 
 #endif /* __UNICORE64_ARCH_HWDEF_COPRO_H__ */
diff --git a/arch/unicore64/kernel/cpu-uc64.c b/arch/unicore64/kernel/cpu-uc64.c
index 01754b6..b0112aa 100644
--- a/arch/unicore64/kernel/cpu-uc64.c
+++ b/arch/unicore64/kernel/cpu-uc64.c
@@ -159,7 +159,7 @@ void __init setup_arch_cpuinfo(void)
 	unsigned long uc64_cpuid;
 	unsigned long uc64_cache;
 
-	uc64_cpuid = read_cp_op(CP0_CPUID, 0);
+	uc64_cpuid = __read_cp_op(CP0_CPUID, 0);
 
 	BUG_ON((uc64_cpuid & CP0_CPUID_PARTNO_SELECT) !=
 			CP0_CPUID_PARTNO_PKUNITY);
@@ -173,7 +173,7 @@ void __init setup_arch_cpuinfo(void)
 		((uc64_cpuid & CP0_CPUID_LAYOUT_SELECT) >> CP0_CPUID_LAYOUT_POS));
 
 	/* CACHE information */
-	uc64_cache = read_cp_op(CP0_CPUID, 1);
+	uc64_cache = __read_cp_op(CP0_CPUID, 1);
 
 	BUG_ON(!(uc64_cache & CP0_CPUID_CACHE_SEPERATE));
 
diff --git a/arch/unicore64/kernel/time.c b/arch/unicore64/kernel/time.c
index 79b0ce3..f015830 100644
--- a/arch/unicore64/kernel/time.c
+++ b/arch/unicore64/kernel/time.c
@@ -13,22 +13,22 @@
 #define INNER_TIMER_IRQENABLE		p1.c3
 
 #define uc64_inner_timer_irq_enable()					\
-		write_cp(read_cp(INNER_TIMER_IRQENABLE) | 1,		\
+		__write_cp(__read_cp(INNER_TIMER_IRQENABLE) | 1,	\
 				INNER_TIMER_IRQENABLE)
 
 #define uc64_inner_timer_irq_disable()					\
-		write_cp(read_cp(INNER_TIMER_IRQENABLE) & ~1,		\
+		__write_cp(__read_cp(INNER_TIMER_IRQENABLE) & ~1,	\
 				INNER_TIMER_IRQENABLE)
 
 #define uc64_inner_timer_status_clear()					\
-		write_cp(read_cp(INNER_TIMER_STATUS) & ~1,		\
+		__write_cp(__read_cp(INNER_TIMER_STATUS) & ~1,		\
 				INNER_TIMER_STATUS)
 
 #define MIN_COUNTER_DELTA			(2)
 
 static cycle_t uc64_inner_timer_read(struct clocksource *cs)
 {
-	return	read_cp(INNER_TIMER_COUNTER);
+	return	__read_cp(INNER_TIMER_COUNTER);
 }
 
 static int uc64_inner_timer_set_next_event(unsigned long delta,
@@ -38,9 +38,9 @@ static int uc64_inner_timer_set_next_event(unsigned long delta,
 
 	uc64_inner_timer_irq_enable();
 
-	next = read_cp(INNER_TIMER_COUNTER) + delta;
-	write_cp(next, INNER_TIMER_MATCHREG);
-	count = read_cp(INNER_TIMER_COUNTER);
+	next = __read_cp(INNER_TIMER_COUNTER) + delta;
+	__write_cp(next, INNER_TIMER_MATCHREG);
+	count = __read_cp(INNER_TIMER_COUNTER);
 
 	return (signed)(next - count) <= MIN_COUNTER_DELTA ? -ETIME : 0;
 }
diff --git a/arch/unicore64/kernel/traps.c b/arch/unicore64/kernel/traps.c
index 692f02c..4435e0a 100644
--- a/arch/unicore64/kernel/traps.c
+++ b/arch/unicore64/kernel/traps.c
@@ -10,7 +10,7 @@
  */
 void __init trap_init(void)
 {
-	write_cp(__vectors_table, CP0_INTR_VECBASE);
+	__write_cp(__vectors_table, CP0_INTR_VECBASE);
 }
 
 /**
-- 
1.7.9.5

