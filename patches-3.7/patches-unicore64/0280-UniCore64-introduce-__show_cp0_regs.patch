From a68a9d258439c17fe01d9c0fe382fe4a05bfd4ea Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Mon, 30 Jan 2012 11:01:39 +0800
Subject: [PATCH 280/641] UniCore64: introduce __show_cp0_regs

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/include/arch/hwdef-cp0-sysctrl.h |    2 +-
 arch/unicore64/include/asm/setup_arch.h         |    2 ++
 arch/unicore64/kernel/cpu-uc64.c                |   39 +++++++++++++++++++++++
 arch/unicore64/kernel/setup.c                   |    1 +
 4 files changed, 43 insertions(+), 1 deletion(-)

diff --git a/arch/unicore64/include/arch/hwdef-cp0-sysctrl.h b/arch/unicore64/include/arch/hwdef-cp0-sysctrl.h
index 15337c1..165ebb3 100644
--- a/arch/unicore64/include/arch/hwdef-cp0-sysctrl.h
+++ b/arch/unicore64/include/arch/hwdef-cp0-sysctrl.h
@@ -39,7 +39,7 @@
 #define CP0_MRAR		p0.c8
 #define CP0_INTR_VECBASE	p0.c9
 #define CP0_INTR_STAT		p0.c10
-#define CP0_RWM			p0.c11
+#define CP0_RWMARGIN		p0.c11
 
 /**
  * DOC: HWDEF_COPRO_H_CP0_CTRLREG
diff --git a/arch/unicore64/include/asm/setup_arch.h b/arch/unicore64/include/asm/setup_arch.h
index 195e293..38e68ef 100644
--- a/arch/unicore64/include/asm/setup_arch.h
+++ b/arch/unicore64/include/asm/setup_arch.h
@@ -15,4 +15,6 @@ extern void setup_arch_devtree(char *cmdline);
 extern char __vectors_table[];
 
 extern void __show_uc64_regs(void);
+extern void __show_cp0_regs(void);
+
 #endif /* __UNICORE64_ASM_SETUP_ARCH_H__ */
diff --git a/arch/unicore64/kernel/cpu-uc64.c b/arch/unicore64/kernel/cpu-uc64.c
index cf69da8..550f705 100644
--- a/arch/unicore64/kernel/cpu-uc64.c
+++ b/arch/unicore64/kernel/cpu-uc64.c
@@ -204,3 +204,42 @@ void __show_uc64_regs(void)
 	pr_emerg(" ASR BSR: %16lx %16lx\n", __read_uc64(asr), __read_uc64(bsr));
 	pr_emerg(" AFR BFR: %16lx %16lx\n", __read_uc64(afr), __read_uc64(bfr));
 }
+
+void __show_cp0_regs(void)
+{
+	pr_emerg("\nCP0 (System Control) Information:\n");
+	pr_emerg(" CPUID: %16lx", __read_cp_op(CP0_CPUID, 0));
+	pr_emerg(" CACHE: %16lx\n", __read_cp_op(CP0_CPUID, 1));
+	pr_emerg(" CTRLREG: %16lx", __read_cp(CP0_CTRLREG));
+	pr_emerg(" TTB/ASID: %16lx\n", __read_cp(CP0_TTB_ASID));
+	pr_emerg(" ITRAP_STAT: %16lx", __read_cp_op(CP0_TRAP_STAT, 0));
+	pr_emerg(" DTRAP_STAT: %16lx", __read_cp_op(CP0_TRAP_STAT, 1));
+	pr_emerg(" DTRAP_VADDR: %16lx\n", __read_cp(CP0_DTRAP_VADDR));
+
+	pr_emerg(" MRAR_BASE: %16lx %16lx %16lx %16lx\n",
+			__read_cp_op(CP0_MRAR, 0),
+			__read_cp_op(CP0_MRAR, 1),
+			__read_cp_op(CP0_MRAR, 2),
+			__read_cp_op(CP0_MRAR, 3));
+	pr_emerg(" (Total 8): %16lx %16lx %16lx %16lx\n",
+			__read_cp_op(CP0_MRAR, 4),
+			__read_cp_op(CP0_MRAR, 5),
+			__read_cp_op(CP0_MRAR, 6),
+			__read_cp_op(CP0_MRAR, 7));
+	pr_emerg(" MRAR_MASK: %16lx %16lx %16lx %16lx\n",
+			__read_cp_op(CP0_MRAR, 8),
+			__read_cp_op(CP0_MRAR, 9),
+			__read_cp_op(CP0_MRAR, 10),
+			__read_cp_op(CP0_MRAR, 11));
+	pr_emerg(" (Total 8): %16lx %16lx %16lx %16lx\n",
+			__read_cp_op(CP0_MRAR, 12),
+			__read_cp_op(CP0_MRAR, 13),
+			__read_cp_op(CP0_MRAR, 14),
+			__read_cp_op(CP0_MRAR, 15));
+
+	pr_emerg(" INTR_VECBASE: %16lx", __read_cp(CP0_INTR_VECBASE));
+	pr_emerg(" INTR_TYPE: %16lx", __read_cp_op(CP0_INTR_STAT, 0));
+	pr_emerg(" INTR_PRIO: %16lx\n", __read_cp_op(CP0_INTR_STAT, 7));
+
+	pr_emerg(" R/W Margin: %16lx", __read_cp(CP0_RWMARGIN));
+}
diff --git a/arch/unicore64/kernel/setup.c b/arch/unicore64/kernel/setup.c
index d691e9c..903f4d8 100644
--- a/arch/unicore64/kernel/setup.c
+++ b/arch/unicore64/kernel/setup.c
@@ -12,6 +12,7 @@ static int uc64_panic_event(struct notifier_block *this,
 		unsigned long event, void *ptr)
 {
 	__show_uc64_regs();
+	__show_cp0_regs();
 
 	return NOTIFY_DONE;
 }
-- 
1.7.9.5

