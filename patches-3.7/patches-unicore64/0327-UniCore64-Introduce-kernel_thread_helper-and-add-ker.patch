From bcb746e8adeb1e24de08e5b39e68e6b3e074bd90 Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Wed, 28 Mar 2012 16:28:47 +0800
Subject: [PATCH 327/641] UniCore64: Introduce kernel_thread_helper and add
 kernel_thread bits

Signed-off-by: Liang Rongrong <liangrongrong@mprc.pku.edu.cn>
Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/kernel/process.c |   25 +++++++++++++++++++++----
 1 file changed, 21 insertions(+), 4 deletions(-)

diff --git a/arch/unicore64/kernel/process.c b/arch/unicore64/kernel/process.c
index f5760af..3d5c6c2 100644
--- a/arch/unicore64/kernel/process.c
+++ b/arch/unicore64/kernel/process.c
@@ -3,17 +3,34 @@
 
 #include <arch/asm-common.h>
 
+static void __noreturn kernel_thread_helper(void *unused,
+		int (*fn)(void *), void *arg)
+{
+	fn(arg);
+	do_exit(-1); /* Should never be called. */
+}
+
 /**
  * kernel_thread() - Create a kernel thread
  * @fn:
  * @arg:
  * @flags:
  */
-int kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)
+int kernel_thread(int (*fn)(void *), void *arg, unsigned long flags)
 {
-	/* FIXME */
-	BUG();
-	return 0;
+	struct pt_regs regs;
+
+	memset(&regs, 0, sizeof(regs));
+
+	/* Don't use r0 since that is set to 0 in copy_thread. */
+	regs.UC64_R01 = (unsigned long)fn;
+	regs.UC64_R02 = (unsigned long)arg;
+	regs.UC64_R31 = (unsigned long)kernel_thread_helper;
+	regs.UC64_ASR = ASR_MODE_PRIV;
+
+	/* Create the new process. */
+	return do_fork(flags | CLONE_VM | CLONE_UNTRACED,
+			0, &regs, 0, NULL, NULL);
 }
 
 /**
-- 
1.7.9.5

