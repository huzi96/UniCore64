From d8065f0724e56e9eccf9fcdabb73f52864dd940c Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Fri, 30 Mar 2012 15:28:54 +0800
Subject: [PATCH 331/641] UniCore64: adjust comment style for entry.S

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/kernel/entry.S |   72 +++++++++++++++++++++--------------------
 1 file changed, 37 insertions(+), 35 deletions(-)

diff --git a/arch/unicore64/kernel/entry.S b/arch/unicore64/kernel/entry.S
index 93478a9..b05dabe 100644
--- a/arch/unicore64/kernel/entry.S
+++ b/arch/unicore64/kernel/entry.S
@@ -6,45 +6,47 @@
 #include <arch/hwdef-cp0-sysctrl.h>
 
 	.macro	__priv_context_save
-	movc	CP0_SWR, r0, #0			/* save r0 for temp use */
-	movc	CP0_SWR, sp, #1			/* save sp for context save */
+	movc	CP0_SWR, r0, #0			@ save r0 for temp use
+	movc	CP0_SWR, sp, #1			@ save sp for context save
 
 	dmov	r0, #-1
-	__push	r0				/* return value */
+	__push	r0				@ push return value
 	dmov	r0, bfr
-	__push	r0				/* bfr */
+	__push	r0				@ push bfr
 	dmov	r0, bsr
-	__push	r0				/* bsr */
+	__push	r0				@ push bsr
 	movc	r0, CP0_EPC, #1
-	__push	r0				/* pc */
-	__push	lr				/* lr */
+	__push	r0				@ push r31(pc)
+	__push	lr				@ push r30(lr)
 	movc	r0, CP0_SWR, #1
-	__push	r0				/* sp */
-	movc	r0, CP0_SWR, #0			/* restore r0 */
+	__push	r0				@ push r29(sp)
+
+	movc	r0, CP0_SWR, #0			@ restore original r0 value
 	.irp	n, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, \
 		15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0
-	__push	r\n				/* save r28-r0 regs */
+	__push	r\n				@ push r28-r0 regs
 	.endr
+
 	.endm
 
 	.macro __priv_context_restore
 	.irp	n, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, \
 		16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
-	__pop	r\n				/* restore r0-r28 regs */
+	__pop	r\n				@ pop r0-r28 regs
 	.endr
-	__pop	lr				/* sp */
-	movc	CP0_SWR, lr, #1
-	__pop	lr				/* lr */
-	movc	CP0_SWR, lr, #0			/* save lr for temp use */
-	__pop	lr				/* pc */
-	movc	CP0_EPC, lr, #1
-	__pop	lr				/* bsr */
+	__pop	lr				@ pop r29(sp)
+	movc	CP0_SWR, lr, #1			@ saved in temp reg
+	__pop	lr				@ pop r30(lr)
+	movc	CP0_SWR, lr, #0			@ saved in temp reg
+	__pop	lr				@ pop r31(pc)
+	movc	CP0_EPC, lr, #1			@ saved in epc reg
+	__pop	lr				@ pop bsr
 	mov	bsr, lr
-	__pop	lr				/* bfr */
+	__pop	lr				@ pop bfr
 	mov	bfr, lr
 
-	movc	lr, CP0_SWR, #0			/* restore lr */
-	movc	sp, CP0_SWR, #1			/* restore sp */
+	movc	lr, CP0_SWR, #0			@ restore r30(lr) value
+	movc	sp, CP0_SWR, #1			@ restore r29(sp) value
 	eret
 	.endm
 
@@ -56,10 +58,10 @@ ENTRY(__switch_to)
 ENDPROC(__switch_to)
 
 ENTRY(__vec_invalid)
-	dmovl		r0,  0xdeaddeaddeaddead
+	dmovl		r0, 0xdeaddeaddeaddead
 	__putdata	r0
 	__putdata	lr
-	__halt		/* no return */
+	__halt					@ no return for invalid vec
 ENDPROC(__vec_invalid)
 
 ENTRY(__vec_itrap)
@@ -136,16 +138,16 @@ ENDPROC(__vec_int_itimer)
 
 	.p2align	L1_CACHE_SHIFT
 ENTRY(__vectors_table)
-	call	__vec_invalid		/* 0x00: RESET */
-	call	__vec_invalid		/* 0x04: EEXTN */
-	call	__vec_invalid		/* 0x08: ESWI */
-	b	__vec_itrap		/* 0x0c: ITRAP */
-	b	__vec_dtrap		/* 0x10: DTRAP */
-	call	__vec_invalid		/* 0x14: FPU_EXC */
-	call	__vec_invalid		/* 0x18: INT_KERNEL */
-	call	__vec_invalid		/* 0x1c: INT_FAULT */
-	b	__vec_int_itimer	/* 0x20: INT_TIMER */
-	b	__vec_int_puv3		/* 0x24: INT_PE */
-	call	__vec_invalid		/* 0x28: INT_OST */
-	call	__vec_invalid		/* 0x2c: INT_PM */
+	call	__vec_invalid			@ 0x00: RESET
+	call	__vec_invalid			@ 0x04: EEXTN
+	call	__vec_invalid			@ 0x08: ESWI
+	b	__vec_itrap			@ 0x0c: ITRAP
+	b	__vec_dtrap			@ 0x10: DTRAP
+	call	__vec_invalid			@ 0x14: FPU_EXC
+	call	__vec_invalid			@ 0x18: INT_KERNEL
+	call	__vec_invalid			@ 0x1c: INT_FAULT
+	b	__vec_int_itimer		@ 0x20: INT_TIMER
+	b	__vec_int_puv3			@ 0x24: INT_PE
+	call	__vec_invalid			@ 0x28: INT_OST
+	call	__vec_invalid			@ 0x2c: INT_PM
 ENDPROC(__vectors_table)
-- 
1.7.9.5

