From 9bff19023620e9ebed6d82e0abb29afe8b7514f6 Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Mon, 4 Jun 2012 10:59:37 +0800
Subject: [PATCH 360/641] UniCore64: remove usp and modify ksp to sp in
 thread_struct

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/include/asm/processor.h |    3 +--
 arch/unicore64/kernel/asm-offsets.c    |    2 +-
 arch/unicore64/kernel/process.c        |    2 +-
 arch/unicore64/kernel/switch_to.S      |    4 ++--
 4 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/arch/unicore64/include/asm/processor.h b/arch/unicore64/include/asm/processor.h
index 9071f7c..b1028ac 100644
--- a/arch/unicore64/include/asm/processor.h
+++ b/arch/unicore64/include/asm/processor.h
@@ -17,8 +17,7 @@
 
 struct thread_struct {
 	unsigned long pc;	/* instruction pointer */
-	unsigned long ksp;	/* kernel stack pointer */
-	unsigned long usp;	/* user stack pointer */
+	unsigned long sp;	/* kernel stack pointer */
 };
 
 #define INIT_THREAD		{ }
diff --git a/arch/unicore64/kernel/asm-offsets.c b/arch/unicore64/kernel/asm-offsets.c
index bb6f61f..c570a81 100644
--- a/arch/unicore64/kernel/asm-offsets.c
+++ b/arch/unicore64/kernel/asm-offsets.c
@@ -20,7 +20,7 @@ int main(void)
 	BLANK();
 
 	OFFSET(THREAD_PC,		thread_struct, pc);
-	OFFSET(THREAD_KSP,		thread_struct, ksp);
+	OFFSET(THREAD_SP,		thread_struct, sp);
 	BLANK();
 
 	OFFSET(THREAD_INFO_FLAGS,	thread_info, flags);
diff --git a/arch/unicore64/kernel/process.c b/arch/unicore64/kernel/process.c
index 30ebdd8..e7ecb89 100644
--- a/arch/unicore64/kernel/process.c
+++ b/arch/unicore64/kernel/process.c
@@ -52,7 +52,7 @@ int copy_thread(unsigned long clone_flags, unsigned long stack_start,
 	childregs->UC64_R00 = 0;
 	childregs->UC64_R29 = stack_start;
 
-	p->thread.ksp = (unsigned long)childregs;
+	p->thread.sp = (unsigned long)childregs;
 	p->thread.pc = (unsigned long)ret_from_fork;
 
 	return 0;
diff --git a/arch/unicore64/kernel/switch_to.S b/arch/unicore64/kernel/switch_to.S
index f46b66d..84a8088 100644
--- a/arch/unicore64/kernel/switch_to.S
+++ b/arch/unicore64/kernel/switch_to.S
@@ -16,7 +16,7 @@ ENTRY(__switch_to)
 	@ Save stack pointer and return address
 	dadd	ip, r0, #TASK_THREAD + THREAD_PC
 	std	lr, [ip]
-	dadd	ip, r0, #TASK_THREAD + THREAD_KSP
+	dadd	ip, r0, #TASK_THREAD + THREAD_SP
 	std	sp, [ip]
 
 	@ Now, switch to another thread
@@ -24,7 +24,7 @@ ENTRY(__switch_to)
 	@ Restore stack pointer and return address
 	dadd	ip, r1, #TASK_THREAD + THREAD_PC
 	ldd	lr, [ip]
-	dadd	ip, r1, #TASK_THREAD + THREAD_KSP
+	dadd	ip, r1, #TASK_THREAD + THREAD_SP
 	ldd	sp, [ip]
 
 	@ Restore all callee-saved registers, from r16 to r27
-- 
1.7.9.5

