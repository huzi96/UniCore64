From 94c0b87f905c6221faa6f8960162cb5a43a09c4d Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Wed, 6 Jun 2012 09:23:54 +0800
Subject: [PATCH 366/641] UniCore64: adjust cpu info output format

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/kernel/cpu-uc64.c |   38 +++++++++++++++++++-------------------
 1 file changed, 19 insertions(+), 19 deletions(-)

diff --git a/arch/unicore64/kernel/cpu-uc64.c b/arch/unicore64/kernel/cpu-uc64.c
index c727ee7..789c0e7 100644
--- a/arch/unicore64/kernel/cpu-uc64.c
+++ b/arch/unicore64/kernel/cpu-uc64.c
@@ -145,13 +145,13 @@ const struct seq_operations cpuinfo_op = {
 #define CACHETYPE_LINE(CT)						\
 	switch (uc64_cache & CP0_CPUID_##CT##CACHE_LINE_SELECT) {	\
 	case CP0_CPUID_##CT##CACHE_LINE_8BYTE:				\
-		printk(KERN_CONT "L8B"); break;					\
+		printk(KERN_CONT "L8B"); break;				\
 	case CP0_CPUID_##CT##CACHE_LINE_16BYTE:				\
-		printk(KERN_CONT "L16B"); break;					\
+		printk(KERN_CONT "L16B"); break;			\
 	case CP0_CPUID_##CT##CACHE_LINE_32BYTE:				\
-		printk(KERN_CONT "L32B"); break;					\
+		printk(KERN_CONT "L32B"); break;			\
 	case CP0_CPUID_##CT##CACHE_LINE_64BYTE:				\
-		printk(KERN_CONT "L64B"); break;					\
+		printk(KERN_CONT "L64B"); break;			\
 	}
 
 void __init setup_arch_cpuinfo(void)
@@ -181,12 +181,12 @@ void __init setup_arch_cpuinfo(void)
 		(uc64_cache & CP0_CPUID_CACHE_LOCKDOWN) ? "LD" : NULL,
 		(uc64_cache & CP0_CPUID_CACHE_WRITEBACK) ? "WB" : "WT");
 
-	pr_info("I$: ");
+	printk(KERN_CONT "I$: ");
 	CACHETYPE_SIZE(I);
 	CACHETYPE_ASSOC(I);
 	CACHETYPE_LINE(I);
 
-	pr_info(", D$: ");
+	printk(KERN_CONT ", D$: ");
 	CACHETYPE_SIZE(D);
 	CACHETYPE_ASSOC(D);
 	CACHETYPE_LINE(D);
@@ -206,41 +206,41 @@ void __show_uc64_regs(void)
 void __show_cp0_regs(void)
 {
 	pr_emerg("\nCP0 (System Control) Information:\n");
-	pr_emerg(" CPUID: %16lx", __read_cp_op(CP0_CPUID, 0));
-	pr_emerg(" CACHE: %16lx\n", __read_cp_op(CP0_CPUID, 1));
-	pr_emerg(" CTRLREG: %16lx", __read_cp(CP0_CTRLREG));
-	pr_emerg(" TTB/ASID: %16lx\n", __read_cp(CP0_TTB_ASID));
+	pr_emerg(" CPUID:      %16lx", __read_cp_op(CP0_CPUID, 0));
+	pr_emerg(" CACHE:      %16lx\n", __read_cp_op(CP0_CPUID, 1));
+	pr_emerg(" CTRLREG:    %16lx", __read_cp(CP0_CTRLREG));
+	pr_emerg(" TTB/ASID:   %16lx\n", __read_cp(CP0_TTB_ASID));
 	pr_emerg(" ITRAP_STAT: %16lx", __read_cp_op(CP0_TRAP_STAT, 0));
 	pr_emerg(" DTRAP_STAT: %16lx", __read_cp_op(CP0_TRAP_STAT, 1));
 	pr_emerg(" DTRAP_ADDR: %16lx\n", __read_cp_op(CP0_EPC, 0));
-	pr_emerg(" EXCP_ADDR: %16lx\n", __read_cp_op(CP0_EPC, 1));
+	pr_emerg(" EXCP_ADDR:  %16lx\n", __read_cp_op(CP0_EPC, 1));
 
-	pr_emerg(" MRAR_BASE: %16lx %16lx %16lx %16lx\n",
+	pr_emerg(" MRAR_BASE:  %16lx %16lx %16lx %16lx\n",
 			__read_cp_op(CP0_MRAR, 0),
 			__read_cp_op(CP0_MRAR, 1),
 			__read_cp_op(CP0_MRAR, 2),
 			__read_cp_op(CP0_MRAR, 3));
-	pr_emerg(" (Total 8): %16lx %16lx %16lx %16lx\n",
+	pr_emerg(" (Total 8):  %16lx %16lx %16lx %16lx\n",
 			__read_cp_op(CP0_MRAR, 4),
 			__read_cp_op(CP0_MRAR, 5),
 			__read_cp_op(CP0_MRAR, 6),
 			__read_cp_op(CP0_MRAR, 7));
-	pr_emerg(" MRAR_MASK: %16lx %16lx %16lx %16lx\n",
+	pr_emerg(" MRAR_MASK:  %16lx %16lx %16lx %16lx\n",
 			__read_cp_op(CP0_MRAR, 8),
 			__read_cp_op(CP0_MRAR, 9),
 			__read_cp_op(CP0_MRAR, 10),
 			__read_cp_op(CP0_MRAR, 11));
-	pr_emerg(" (Total 8): %16lx %16lx %16lx %16lx\n",
+	pr_emerg(" (Total 8):  %16lx %16lx %16lx %16lx\n",
 			__read_cp_op(CP0_MRAR, 12),
 			__read_cp_op(CP0_MRAR, 13),
 			__read_cp_op(CP0_MRAR, 14),
 			__read_cp_op(CP0_MRAR, 15));
 
-	pr_emerg(" VECBASE: %16lx", __read_cp(CP0_VECBASE));
-	pr_emerg(" INTR_TYPE: %16lx", __read_cp_op(CP0_INTR, 0));
-	pr_emerg(" INTR_PRIO: %16lx\n", __read_cp_op(CP0_INTR, 7));
+	pr_emerg(" VECBASE:    %16lx", __read_cp(CP0_VECBASE));
+	pr_emerg(" INTR_TYPE:  %16lx", __read_cp_op(CP0_INTR, 0));
+	pr_emerg(" INTR_PRIO:  %16lx\n", __read_cp_op(CP0_INTR, 7));
 	pr_emerg(" INNER_TIMER_COUNTER: %16lx", __read_cp_op(CP0_INTR, 9));
-	pr_emerg(" INNER_TIMER_MATCH: %16lx", __read_cp_op(CP0_INTR, 10));
+	pr_emerg(" INNER_TIMER_MATCH:   %16lx", __read_cp_op(CP0_INTR, 10));
 
 	pr_emerg(" R/W Margin: %16lx", __read_cp(CP0_RWMARGIN));
 }
-- 
1.7.9.5

