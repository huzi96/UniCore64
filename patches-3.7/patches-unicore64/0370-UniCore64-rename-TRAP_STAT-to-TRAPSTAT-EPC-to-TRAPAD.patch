From e5250d0bba3a42b0c0a1e3b90501c3dc573aaae3 Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Thu, 7 Jun 2012 15:19:16 +0800
Subject: [PATCH 370/641] UniCore64: rename TRAP_STAT to TRAPSTAT, EPC to
 TRAPADDR

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/include/arch/hwdef-cp0-sysctrl.h |    8 ++++----
 arch/unicore64/kernel/cpu-uc64.c                |    8 ++++----
 arch/unicore64/kernel/entry.S                   |    8 ++++----
 arch/unicore64/mm/fault.c                       |    8 ++++----
 4 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/arch/unicore64/include/arch/hwdef-cp0-sysctrl.h b/arch/unicore64/include/arch/hwdef-cp0-sysctrl.h
index 2dba8c6..3232f0e 100644
--- a/arch/unicore64/include/arch/hwdef-cp0-sysctrl.h
+++ b/arch/unicore64/include/arch/hwdef-cp0-sysctrl.h
@@ -37,8 +37,8 @@
 #define CP0_CPUID		p0.c0
 #define CP0_CTRLREG		p0.c1
 #define CP0_TTB_ASID		p0.c2
-#define CP0_TRAP_STAT		p0.c3
-#define CP0_EPC			p0.c4
+#define CP0_TRAPSTAT		p0.c3
+#define CP0_TRAPADDR		p0.c4
 #define CP0_TLB			p0.c5
 #define CP0_DCACHE		p0.c6
 #define CP0_ICACHE		p0.c7
@@ -165,7 +165,7 @@
 #define CP0_CPUID_CACHE_WRITEBACK		__BF(1, 1, 26)
 #define CP0_CPUID_CACHE_WRITETHROUGH		__BF(1, 1, 27)
 
-#define CP0_TRAP_STAT_SELECT			__BS(4, 0)
-#define CP0_TRAP_STAT_UNALIGN			__BF(1, 1, 4)
+#define CP0_TRAPSTAT_SELECT			__BS(4, 0)
+#define CP0_TRAPSTAT_UNALIGN			__BF(1, 1, 4)
 
 #endif /* __UNICORE64_ARCH_HWDEF_CP0_SYSCTRL_H__ */
diff --git a/arch/unicore64/kernel/cpu-uc64.c b/arch/unicore64/kernel/cpu-uc64.c
index 455fec55..b6ac561 100644
--- a/arch/unicore64/kernel/cpu-uc64.c
+++ b/arch/unicore64/kernel/cpu-uc64.c
@@ -210,10 +210,10 @@ void __show_cp0_regs(void)
 	pr_emerg(" CACHE:      %16lx\n", __read_cp_op(CP0_CPUID, 1));
 	pr_emerg(" CTRLREG:    %16lx", __read_cp(CP0_CTRLREG));
 	pr_emerg(" TTB/ASID:   %16lx\n", __read_cp(CP0_TTB_ASID));
-	pr_emerg(" ITRAP_STAT: %16lx", __read_cp_op(CP0_TRAP_STAT, 0));
-	pr_emerg(" DTRAP_STAT: %16lx", __read_cp_op(CP0_TRAP_STAT, 1));
-	pr_emerg(" DTRAP_ADDR: %16lx\n", __read_cp_op(CP0_EPC, 0));
-	pr_emerg(" EXCP_ADDR:  %16lx\n", __read_cp_op(CP0_EPC, 1));
+	pr_emerg(" ITRAPSTAT:  %16lx", __read_cp_op(CP0_TRAPSTAT, 0));
+	pr_emerg(" DTRAPSTAT:  %16lx", __read_cp_op(CP0_TRAPSTAT, 1));
+	pr_emerg(" ITRAPADDR:  %16lx\n", __read_cp_op(CP0_TRAPADDR, 1));
+	pr_emerg(" DTRAPADDR:  %16lx\n", __read_cp_op(CP0_TRAPADDR, 0));
 
 	pr_emerg(" MRAR_BASE:  %16lx %16lx %16lx %16lx\n",
 			__read_cp_op(CP0_MRAR, 0),
diff --git a/arch/unicore64/kernel/entry.S b/arch/unicore64/kernel/entry.S
index 69b601e..ef1558e 100644
--- a/arch/unicore64/kernel/entry.S
+++ b/arch/unicore64/kernel/entry.S
@@ -33,7 +33,7 @@
 	__push		r0				@ push bfr
 	dmov		r0, bsr
 	__push		r0				@ push bsr
-	movc		r0, CP0_EPC, #1
+	movc		r0, CP0_TRAPADDR, #1
 	__push		r0				@ push r31(pc)
 	__push		lr				@ push r30(lr)
 	movc		r0, CP0_SWR, #5
@@ -63,7 +63,7 @@
 	__pop		lr				@ pop r30(lr)
 	movc		CP0_SWR, lr, #4			@ saved in temp reg
 	__pop		lr				@ pop r31(pc)
-	movc		CP0_EPC, lr, #1			@ saved in epc reg
+	movc		CP0_TRAPADDR, lr, #1		@ saved in epc reg
 	__pop		lr				@ pop bsr
 	dmov		bsr, lr
 	__pop		lr				@ pop bfr
@@ -110,7 +110,7 @@ ENTRY(__vec_itrap)
 	@ r0 - address of faulting instruction
 	@ r1 - pointer to registers on stack
 	@
-	movc		r0, CP0_EPC, #1
+	movc		r0, CP0_TRAPADDR, #1
 	dmov		r1, sp
 
 	__irq_enable
@@ -132,7 +132,7 @@ ENTRY(__vec_dtrap)
 	@ r0 - address of faulting address
 	@ r1 - pointer to registers on stack
 	@
-	movc		r0, CP0_EPC, #0
+	movc		r0, CP0_TRAPADDR, #0
 	dmov		r1, sp
 
 	__irq_enable
diff --git a/arch/unicore64/mm/fault.c b/arch/unicore64/mm/fault.c
index e3b3d60..020c966 100644
--- a/arch/unicore64/mm/fault.c
+++ b/arch/unicore64/mm/fault.c
@@ -33,8 +33,8 @@ static void __do_pagefault(unsigned long addr, struct pt_regs *regs)
 	BUG();
 }
 
-#define __itrap_stat()	__read_cp_op(CP0_TRAP_STAT, 0)
-#define __dtrap_stat()	__read_cp_op(CP0_TRAP_STAT, 1)
+#define __itrap_stat()	__read_cp_op(CP0_TRAPSTAT, 0)
+#define __dtrap_stat()	__read_cp_op(CP0_TRAPSTAT, 1)
 
 struct __trap_info {
 	void (*fn) (unsigned long addr, struct pt_regs *);
@@ -99,9 +99,9 @@ void __do_dtrap(unsigned long addr, struct pt_regs *regs)
 	int dtno;
 
 	dtno = __dtrap_stat();
-	if (dtno & CP0_TRAP_STAT_UNALIGN) {
+	if (dtno & CP0_TRAPSTAT_UNALIGN) {
 		pr_err("Error: DTRAP occured with Un-Alignment Sticky!\n");
-		dtno &= CP0_TRAP_STAT_SELECT;
+		dtno &= CP0_TRAPSTAT_SELECT;
 	}
 
 	info = __dtrap_info + dtno;
-- 
1.7.9.5

