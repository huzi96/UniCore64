From ee61fc6b0e60ac18fb82a91f52266f914b0ef2ed Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Mon, 11 Jun 2012 09:38:26 +0800
Subject: [PATCH 373/641] UniCore64: rename CP0_SWR to CP0_SYSU

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/include/arch/hwdef-cp0-sysctrl.h |    5 +++--
 arch/unicore64/include/asm/ptrace.h             |    2 +-
 arch/unicore64/kernel/entry.S                   |   20 ++++++++++----------
 3 files changed, 14 insertions(+), 13 deletions(-)

diff --git a/arch/unicore64/include/arch/hwdef-cp0-sysctrl.h b/arch/unicore64/include/arch/hwdef-cp0-sysctrl.h
index 3232f0e..85ad77b 100644
--- a/arch/unicore64/include/arch/hwdef-cp0-sysctrl.h
+++ b/arch/unicore64/include/arch/hwdef-cp0-sysctrl.h
@@ -25,12 +25,13 @@
  * CP0 CR9:	reg. for interruption vector base
  * CP0 CR10:	reg. for timer interrupt and interrupt information
  * CP0 CR11:	control reg. of Read/Write Margin
- * CP0 CR12:	reg. of software usage
+ * CP0 CR12:	reg. of SysU (first 8 regs just for software use)
  *   #0: for atomic operation, saved/restored when context switch
  *   #4: for temperary usage, perhaps destroyed when context switch
  *   #5: for temperary usage, perhaps destroyed when context switch
  *   #6: reserved for ocd
  *   #7: reserved for ocd
+ *   #8: physical address for last memory access
  * -
  * \\\\lt:/programlisting\\\\gt:
  */
@@ -46,7 +47,7 @@
 #define CP0_VECBASE		p0.c9
 #define CP0_INTR		p0.c10
 #define CP0_RWMARGIN		p0.c11
-#define CP0_SWR			p0.c12
+#define CP0_SYSU		p0.c12
 
 #define CP0_INTR_ITM			__BF(1, 1, 7)
 #define CP0_INTR_LSU			__BF(1, 1, 8)
diff --git a/arch/unicore64/include/asm/ptrace.h b/arch/unicore64/include/asm/ptrace.h
index c074b6f..65f234d 100644
--- a/arch/unicore64/include/asm/ptrace.h
+++ b/arch/unicore64/include/asm/ptrace.h
@@ -44,7 +44,7 @@ struct pt_regs {
 #define UC64_R31		uc64_regs[31]
 #define UC64_ASR		uc64_regs[32]
 #define UC64_AFR		uc64_regs[33]
-#define UC64_SW0		uc64_regs[34] /* SWR #0 */
+#define UC64_SW0		uc64_regs[34] /* CP0_SYSU #0 */
 #define UC64_O00		uc64_regs[35] /* Orig R00 */
 
 #ifdef __KERNEL__
diff --git a/arch/unicore64/kernel/entry.S b/arch/unicore64/kernel/entry.S
index ef1558e..d72a275 100644
--- a/arch/unicore64/kernel/entry.S
+++ b/arch/unicore64/kernel/entry.S
@@ -20,14 +20,14 @@
 
 	.macro		__priv_entry
 	@ step 1: save r0 and sp to keep their original values
-	movc		CP0_SWR, r0, #4
-	movc		CP0_SWR, sp, #5
+	movc		CP0_SYSU, r0, #4
+	movc		CP0_SYSU, sp, #5
 	__redzone
 
 	@ step 2: push special registers into stack, see struct pt_regs
 	dmov		r0, #-1
 	__push		r0				@ push return value
-	movc		r0, CP0_SWR, #0
+	movc		r0, CP0_SYSU, #0
 	__push		r0				@ push swr #0
 	dmov		r0, bfr
 	__push		r0				@ push bfr
@@ -36,11 +36,11 @@
 	movc		r0, CP0_TRAPADDR, #1
 	__push		r0				@ push r31(pc)
 	__push		lr				@ push r30(lr)
-	movc		r0, CP0_SWR, #5
+	movc		r0, CP0_SYSU, #5
 	__push		r0				@ push r29(sp)
 
 	@ step 3: push general registers into stack, see struct pt_regs
-	movc		r0, CP0_SWR, #4			@ restore r0 value
+	movc		r0, CP0_SYSU, #4		@ restore r0 value
 	.irp		n, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16 \
 			, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0
 	__push		r\n
@@ -59,9 +59,9 @@
 
 	@ step 3: pop special registers from stack, see struct pt_regs
 	__pop		lr				@ pop r29(sp)
-	movc		CP0_SWR, lr, #5			@ saved in temp reg
+	movc		CP0_SYSU, lr, #5		@ saved in temp reg
 	__pop		lr				@ pop r30(lr)
-	movc		CP0_SWR, lr, #4			@ saved in temp reg
+	movc		CP0_SYSU, lr, #4		@ saved in temp reg
 	__pop		lr				@ pop r31(pc)
 	movc		CP0_TRAPADDR, lr, #1		@ saved in epc reg
 	__pop		lr				@ pop bsr
@@ -69,11 +69,11 @@
 	__pop		lr				@ pop bfr
 	dmov		bfr, lr
 	__pop		lr				@ pop swr #0
-	movc		CP0_SWR, lr, #0
+	movc		CP0_SYSU, lr, #0
 
 	@ step 4: restore the original values of lr and sp
-	movc		lr, CP0_SWR, #4			@ restore r30(lr) value
-	movc		sp, CP0_SWR, #5			@ restore r29(sp) value
+	movc		lr, CP0_SYSU, #4		@ restore r30(lr) value
+	movc		sp, CP0_SYSU, #5		@ restore r29(sp) value
 	.endm
 
 /**
-- 
1.7.9.5

