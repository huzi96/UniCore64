From 9a87d0a7a30503d1c4f2c64b8fbb6a5a8e7fa262 Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Tue, 28 Aug 2012 10:07:19 +0800
Subject: [PATCH 406/641] unicore64: Introduce cpu_context_save into
 thread_struct

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/include/asm/processor.h |   22 +++++++++++++++++++---
 arch/unicore64/kernel/asm-offsets.c    |    3 +--
 arch/unicore64/kernel/process.c        |    4 ++--
 arch/unicore64/kernel/switch_to.S      |   27 ++++++++++++---------------
 4 files changed, 34 insertions(+), 22 deletions(-)

diff --git a/arch/unicore64/include/asm/processor.h b/arch/unicore64/include/asm/processor.h
index b1028ac..8800704 100644
--- a/arch/unicore64/include/asm/processor.h
+++ b/arch/unicore64/include/asm/processor.h
@@ -15,14 +15,30 @@
  */
 #define current_text_addr()	({ __label__ _l; _l: &&_l; })
 
+struct cpu_context_save {
+	unsigned long r16;
+	unsigned long r17;
+	unsigned long r18;
+	unsigned long r19;
+	unsigned long r20;
+	unsigned long r21;
+	unsigned long r22;
+	unsigned long r23;
+	unsigned long r24;
+	unsigned long r25;
+	unsigned long r26;
+	unsigned long r27;
+	unsigned long r29;	/* kernel stack pointer */
+	unsigned long r30;	/* return address */
+};
+
 struct thread_struct {
-	unsigned long pc;	/* instruction pointer */
-	unsigned long sp;	/* kernel stack pointer */
+	struct cpu_context_save	cpu_context;
 };
 
 #define INIT_THREAD		{ }
 
-#define thread_saved_pc(tsk)	((tsk)->thread.pc)
+#define thread_saved_pc(tsk)	((tsk)->thread.cpu_context.r30)
 
 /* ____epip: prepare_to_copy will be removed when tip tree merged */
 #define prepare_to_copy(tsk)	do { } while (0)
diff --git a/arch/unicore64/kernel/asm-offsets.c b/arch/unicore64/kernel/asm-offsets.c
index c570a81..dd50163 100644
--- a/arch/unicore64/kernel/asm-offsets.c
+++ b/arch/unicore64/kernel/asm-offsets.c
@@ -19,8 +19,7 @@ int main(void)
 	OFFSET(TASK_THREAD,		task_struct, thread);
 	BLANK();
 
-	OFFSET(THREAD_PC,		thread_struct, pc);
-	OFFSET(THREAD_SP,		thread_struct, sp);
+	OFFSET(THREAD_CPU_CONTEXT,	thread_struct, cpu_context);
 	BLANK();
 
 	OFFSET(THREAD_INFO_FLAGS,	thread_info, flags);
diff --git a/arch/unicore64/kernel/process.c b/arch/unicore64/kernel/process.c
index eacc8ac..35a74e7 100644
--- a/arch/unicore64/kernel/process.c
+++ b/arch/unicore64/kernel/process.c
@@ -52,8 +52,8 @@ int copy_thread(unsigned long clone_flags, unsigned long stack_start,
 	childregs->UC64_R00 = 0;
 	childregs->UC64_R29 = stack_start;
 
-	p->thread.sp = (unsigned long)childregs;
-	p->thread.pc = (unsigned long)ret_from_fork;
+	p->thread.cpu_context.r29 = (unsigned long)childregs;
+	p->thread.cpu_context.r30 = (unsigned long)ret_from_fork;
 
 	return 0;
 }
diff --git a/arch/unicore64/kernel/switch_to.S b/arch/unicore64/kernel/switch_to.S
index 84a8088..153760c 100644
--- a/arch/unicore64/kernel/switch_to.S
+++ b/arch/unicore64/kernel/switch_to.S
@@ -8,28 +8,25 @@
  * @next:	next task_struct in r1
  */
 ENTRY(__switch_to)
+	@ Calculate cpu_context position of prev task
+	dadd	ip, r0, #TASK_THREAD + THREAD_CPU_CONTEXT
+
 	@ Save all callee-saved registers, from r16 to r27
-	.irp	n, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16
-	__push	r\n
+	@ Save stack pointer(r29) and return address(r30)
+	.irp	n, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30
+	std.w	r\n, [ip]+, #8
 	.endr
 
-	@ Save stack pointer and return address
-	dadd	ip, r0, #TASK_THREAD + THREAD_PC
-	std	lr, [ip]
-	dadd	ip, r0, #TASK_THREAD + THREAD_SP
-	std	sp, [ip]
-
 	@ Now, switch to another thread
 
-	@ Restore stack pointer and return address
-	dadd	ip, r1, #TASK_THREAD + THREAD_PC
-	ldd	lr, [ip]
-	dadd	ip, r1, #TASK_THREAD + THREAD_SP
-	ldd	sp, [ip]
+	@ Calculate cpu_context position of next task
+	dadd	ip, r1, #TASK_THREAD + THREAD_CPU_CONTEXT
 
 	@ Restore all callee-saved registers, from r16 to r27
-	.irp	n, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27
-	__pop	r\n
+	@ Restore stack pointer(r29) and return address(r30)
+
+	.irp	n, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30
+	ldd.w	r\n, [ip]+, #8
 	.endr
 
 	return
-- 
1.7.9.5

