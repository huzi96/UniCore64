From 91c929f70f2ce8aca45152173b2c92e1acae79d0 Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Fri, 26 Oct 2012 12:45:40 +0800
Subject: [PATCH 440/641] unicore64: Remove redzone related code

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/Kconfig.debug               |   11 -----------
 arch/unicore64/configs/unicore64_defconfig |    1 -
 arch/unicore64/kernel/entry.S              |    7 -------
 3 files changed, 19 deletions(-)

diff --git a/arch/unicore64/Kconfig.debug b/arch/unicore64/Kconfig.debug
index 02f865e..ebf97b4 100644
--- a/arch/unicore64/Kconfig.debug
+++ b/arch/unicore64/Kconfig.debug
@@ -33,15 +33,4 @@ config OCD_CONSOLE
 	depends on VGA_CONSOLE!=y && FRAMEBUFFER_CONSOLE!=y && DEBUG_OCD
 	default y
 
-config DEBUG_REDZONE
-	bool "Protect stack when red zone enabled"
-	default n
-	help
-	  In common sense, compiler and os should guarantee stack discipline.
-
-	  However, we need to consider an optimization method named red zone,
-	  which will use unallocated stack space as temperary storage area.
-	  Since interrupts could take place in priviledge mode, we need to
-	  reserve additional stack space for correctness.
-
 endmenu
diff --git a/arch/unicore64/configs/unicore64_defconfig b/arch/unicore64/configs/unicore64_defconfig
index d93f02a..f3dc0bc 100644
--- a/arch/unicore64/configs/unicore64_defconfig
+++ b/arch/unicore64/configs/unicore64_defconfig
@@ -26,4 +26,3 @@ CONFIG_DEBUG_MCOUNT=y
 CONFIG_CMDLINE="earlyprintk=ocd ignore_loglevel root=/dev/ram0 rw"
 
 ### Kernel hacking
-CONFIG_DEBUG_REDZONE=y
diff --git a/arch/unicore64/kernel/entry.S b/arch/unicore64/kernel/entry.S
index 1f4b90a..d5c0394 100644
--- a/arch/unicore64/kernel/entry.S
+++ b/arch/unicore64/kernel/entry.S
@@ -12,17 +12,10 @@
 	dlsl		&rd, &rd, #13
 	.endm
 
-	.macro		__redzone
-#ifdef	CONFIG_DEBUG_REDZONE
-	dsub		sp, sp, #128			@ only a guess
-#endif
-	.endm
-
 	.macro		__priv_entry
 	@ step 1: save r0 and sp to keep their original values
 	movc		CP0_SYSU, r0, #4
 	movc		CP0_SYSU, sp, #5
-	__redzone
 
 	@ step 2: push special registers into stack, see struct pt_regs
 	dmov		r0, #-1
-- 
1.7.9.5

