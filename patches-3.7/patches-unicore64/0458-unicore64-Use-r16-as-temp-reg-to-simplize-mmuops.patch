From a02a5e3602d12daf8bf2662f54be684c5d593c55 Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Fri, 2 Nov 2012 13:39:34 +0800
Subject: [PATCH 458/641] unicore64: Use r16 as temp reg to simplize mmuops

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/boot/boot.S                |    2 +-
 arch/unicore64/include/arch/asm-mmuops.h  |   44 +++++++++++++----------------
 arch/unicore64/include/arch/head-macros.S |    4 +--
 arch/unicore64/kernel/head.S              |    2 +-
 4 files changed, 24 insertions(+), 28 deletions(-)

diff --git a/arch/unicore64/boot/boot.S b/arch/unicore64/boot/boot.S
index d75d64b..0dc4674 100644
--- a/arch/unicore64/boot/boot.S
+++ b/arch/unicore64/boot/boot.S
@@ -29,7 +29,7 @@ _start:
 	call		decompress_kernel
 
 	/* Re-initialize to system default status */
-	__flush_dcache	r0
+	__flush_dcache
 	__head_init	r0
 
 	/*
diff --git a/arch/unicore64/include/arch/asm-mmuops.h b/arch/unicore64/include/arch/asm-mmuops.h
index 9c67c6b..f5d2f9e 100644
--- a/arch/unicore64/include/arch/asm-mmuops.h
+++ b/arch/unicore64/include/arch/asm-mmuops.h
@@ -11,39 +11,35 @@
 /**
  * DOC: ASM_MMUOPS_H_INVALIDATE_DCACHE
  * __invalid_dcache - invalidate entire L1 dcache
+ * __flush_dcache - flush entire L1 dcache
+ * __invalid_icache - invalidate entire icache
+ * __invalid_tlb - invalidate I&D tlb
  */
-__ASMMACRO_WRAP(.macro	__invalid_dcache, rt;
-			dmovl	&rt, #0;
-			movc	p0.c6, &rt, #8;
+__ASMMACRO_WRAP(.macro	__invalid_dcache;
+			dmovl	r16, #0;
+			movc	p0.c6, r16, #8;
 		.endm)
 
-/**
- * DOC: ASM_MMUOPS_H_FLUSH_DCACHE
- * __flush_dcache - flush entire L1 dcache
- */
-__ASMMACRO_WRAP(.macro	__flush_dcache, rt;
-			dmovl	&rt, #0;
-			movc	p0.c6, &rt, #12;
+__ASMMACRO_WRAP(.macro	__flush_dcache;
+			dmovl	r16, #0;
+			movc	p0.c6, r16, #12;
 		.endm)
 
-/**
- * DOC: ASM_MMUOPS_H_INVALIDATE_ICACHE
- * __invalid_icache - invalidate entire icache
- */
-__ASMMACRO_WRAP(.macro	__invalid_icache, rt;
-			dmovl	&rt, #0;
-			movc	p0.c7, &rt, #0;
+__ASMMACRO_WRAP(.macro	__invalid_icache;
+			dmovl	r16, #0;
+			movc	p0.c7, r16, #0;
 		.endm)
 
-/**
- * DOC: ASM_MMUOPS_H_INVALIDATE_TLB
- * __invalid_tlb - invalidate I&D tlb
- */
-__ASMMACRO_WRAP(.macro	__invalid_tlb, rt;
-			dmovl	&rt, #0;
-			movc	p0.c5, &rt, #24;
+__ASMMACRO_WRAP(.macro	__invalid_tlb;
+			dmovl	r16, #0;
+			movc	p0.c5, r16, #24;
 		.endm)
 
+#define __invalid_dcache()			__asm__("__invalid_dcache")
+#define __invalid_icache()			__asm__("__invalid_icache")
+#define __invalid_tlb()				__asm__("__invalid_tlb")
+#define __flush_dcache()			__asm__("__flush_dcache")
+
 /**
  * DOC: ASM_MMUOPS_H_SET_PGD
  * __set_pgd -  set pgd address
diff --git a/arch/unicore64/include/arch/head-macros.S b/arch/unicore64/include/arch/head-macros.S
index ced150e..5aa63eb 100644
--- a/arch/unicore64/include/arch/head-macros.S
+++ b/arch/unicore64/include/arch/head-macros.S
@@ -44,8 +44,8 @@
  * __cache_init - invalid and enable icache and dcache
  */
 .macro	__cache_init, rt
-	__invalid_dcache	&rt
-	__invalid_icache	&rt
+	__invalid_dcache
+	__invalid_icache
 
 	movc		&rt, p0.c1, #0;
 #ifndef CONFIG_CPU_DCACHE_DISABLE
diff --git a/arch/unicore64/kernel/head.S b/arch/unicore64/kernel/head.S
index 275d318..9bd65a0 100644
--- a/arch/unicore64/kernel/head.S
+++ b/arch/unicore64/kernel/head.S
@@ -39,7 +39,7 @@ ENTRY(stext)
 	dmovl		sp, #UC64_PM_ZIMAGE_STACKTOP
 	call		__head_pgtable_init
 
-	__invalid_tlb	r0
+	__invalid_tlb
 
 	movc		r0, CP0_CTRLREG, #0
 	dor		r0, r0, #CP0_CTRLREG_MMU
-- 
1.7.9.5

