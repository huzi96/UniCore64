From 775dc105090edd76c070b1c87ba24eaa4b1db667 Mon Sep 17 00:00:00 2001
From: Liu Guoli <liuguoli@mprc.pku.edu.cn>
Date: Mon, 19 Nov 2012 15:19:31 +0800
Subject: [PATCH 470/641] UniCore64: Add __context_save and __context_restore

Signed-off-by: Liu Guoli <liuguoli@mprc.pku.edu.cn>
---
 arch/unicore64/include/asm/ptrace.h |   14 ++---
 arch/unicore64/kernel/entry.S       |   99 ++++++++++++++++++-----------------
 2 files changed, 57 insertions(+), 56 deletions(-)

diff --git a/arch/unicore64/include/asm/ptrace.h b/arch/unicore64/include/asm/ptrace.h
index 65f234d..943f096 100644
--- a/arch/unicore64/include/asm/ptrace.h
+++ b/arch/unicore64/include/asm/ptrace.h
@@ -39,13 +39,13 @@ struct pt_regs {
 #define UC64_R26		uc64_regs[26]
 #define UC64_R27		uc64_regs[27]
 #define UC64_R28		uc64_regs[28]
-#define UC64_R29		uc64_regs[29]
-#define UC64_R30		uc64_regs[30]
-#define UC64_R31		uc64_regs[31]
-#define UC64_ASR		uc64_regs[32]
-#define UC64_AFR		uc64_regs[33]
-#define UC64_SW0		uc64_regs[34] /* CP0_SYSU #0 */
-#define UC64_O00		uc64_regs[35] /* Orig R00 */
+#define UC64_AFR		uc64_regs[29]
+#define UC64_ASR		uc64_regs[30]
+#define UC64_SW0		uc64_regs[31] /* CP0_SYSU #0 */
+#define UC64_O00		uc64_regs[32] /* Orig R00 */
+#define UC64_R31		uc64_regs[33]
+#define UC64_R30		uc64_regs[34]
+#define UC64_R29		uc64_regs[35]
 
 #ifdef __KERNEL__
 
diff --git a/arch/unicore64/kernel/entry.S b/arch/unicore64/kernel/entry.S
index 9f73a28..71e8b5f 100644
--- a/arch/unicore64/kernel/entry.S
+++ b/arch/unicore64/kernel/entry.S
@@ -12,61 +12,43 @@
 	dlsl		&rd, &rd, #13
 	.endm
 
-	.macro		__priv_entry
-	@ step 1: save r0 and sp to keep their original values
-	movc		CP0_SYSU, r0, #4
-	movc		CP0_SYSU, sp, #5
-
-	@ step 2: push special registers into stack, see struct pt_regs
-	dmov		r0, #-1
-	__push		r0				@ push return value
-	movc		r0, CP0_SYSU, #0
-	__push		r0				@ push swr #0
-	dmov		r0, bfr
-	__push		r0				@ push bfr
-	dmov		r0, bsr
-	__push		r0				@ push bsr
-	movc		r0, CP0_TRAPADDR, #1
-	__push		r0				@ push r31(pc)
-	__push		lr				@ push r30(lr)
-	movc		r0, CP0_SYSU, #5
-	__push		r0				@ push r29(sp)
-
-	@ step 3: push general registers into stack, see struct pt_regs
-	movc		r0, CP0_SYSU, #4		@ restore r0 value
+	.macro		__context_save
+	@ step 1: push special registers into stack, see struct pt_regs
+	movc		lr, CP0_TRAPADDR, #1
+	__push		lr				@ push r31(pc)
+	dmov		lr, #-1
+	__push		lr				@ push return value
+	movc		lr, CP0_SYSU, #0
+	__push		lr				@ push swr #0
+	dmov		lr, bsr
+	__push		lr				@ push bsr
+	dmov		lr, bfr
+	__push		lr				@ push bfr
+
+	@ step 2: push general registers into stack, see struct pt_regs
 	.irp		n, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16 \
 			, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0
 	__push		r\n
 	.endr
-
 	.endm
 
-	.macro		__priv_exit
-	@ step 1: pop only-kernel-awared registers from stack
-
-	@ step 2: pop general registers from stack, see struct pt_regs
+	.macro		__context_restore
+	@ step 1: pop general registers from stack, see struct pt_regs
 	.irp		n, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, \
 			15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
 	__pop		r\n				@ pop r0-r28 regs
 	.endr
 
-	@ step 3: pop special registers from stack, see struct pt_regs
-	__pop		lr				@ pop r29(sp)
-	movc		CP0_SYSU, lr, #5		@ saved in temp reg
-	__pop		lr				@ pop r30(lr)
-	movc		CP0_SYSU, lr, #4		@ saved in temp reg
-	__pop		lr				@ pop r31(pc)
-	movc		CP0_TRAPADDR, lr, #1		@ saved in epc reg
-	__pop		lr				@ pop bsr
-	dmov		bsr, lr
+	@ step 2: pop special registers from stack, see struct pt_regs
 	__pop		lr				@ pop bfr
 	dmov		bfr, lr
+	__pop		lr				@ pop bsr
+	dmov		bsr, lr
 	__pop		lr				@ pop swr #0
 	movc		CP0_SYSU, lr, #0
-
-	@ step 4: restore the original values of lr and sp
-	movc		lr, CP0_SYSU, #4		@ restore r30(lr) value
-	movc		sp, CP0_SYSU, #5		@ restore r29(sp) value
+	__pop		lr				@ pop return value
+	__pop		lr				@ pop r31(pc)
+	movc		CP0_TRAPADDR, lr, #1		@ saved in epc reg
 	.endm
 
 /**
@@ -83,7 +65,10 @@ ENTRY(ret_from_fork)
 	bne		schedule		@ return to 1001b
 	cmpsub.a	r18, #0
 	bne		__vec_invalid		@ print error information
-	__priv_exit
+	__context_restore
+	ldd.wu		lr, [sp]+, #8
+	ldd.wu		sp, [sp]+, #8
+	dsub		sp, sp, #288
 	eret
 ENDPROC(ret_from_fork)
 
@@ -102,7 +87,9 @@ ENTRY(__vec_invalid)
 ENDPROC(__vec_invalid)
 
 ENTRY(__vec_itrap)
-	__priv_entry
+	__push		sp				@ push r29(sp)
+	__push		lr				@ push r30(lr)
+	__context_save
 
 	@
 	@ set args, then call itrap main handler
@@ -119,12 +106,16 @@ ENTRY(__vec_itrap)
 
 	__irq_disable
 
-	__priv_exit
+	__context_restore
+	__pop		lr				@ pop r30(lr)
+	__pop		sp				@ pop r29(sp)
 	eret
 ENDPROC(__vec_itrap)
 
 ENTRY(__vec_dtrap)
-	__priv_entry
+	__push		sp				@ push r29(sp)
+	__push		lr				@ push r30(lr)
+	__context_save
 
 	@
 	@ set args, then call dtrap main handler
@@ -141,27 +132,37 @@ ENTRY(__vec_dtrap)
 
 	__irq_disable
 
-	__priv_exit
+	__context_restore
+	__pop		lr				@ pop r30(lr)
+	__pop		sp				@ pop r29(sp)
 	eret
 ENDPROC(__vec_dtrap)
 
 ENTRY(__vec_int_puv3)
-	__priv_entry
+	__push		sp				@ push r29(sp)
+	__push		lr				@ push r30(lr)
+	__context_save
 #ifdef CONFIG_ARCH_PUV3
 	call		puv3_intc_handler
 #endif
-	__priv_exit
+	__context_restore
+	__pop		lr				@ pop r30(lr)
+	__pop		sp				@ pop r29(sp)
 	eret
 ENDPROC(__vec_int_puv3)
 
 ENTRY(__vec_int_itimer)
-	__priv_entry
+	__push		sp				@ push r29(sp)
+	__push		lr				@ push r30(lr)
+	__context_save
 
 	@ void __itimer_irqhandler(struct pt_regs *regs)
 	dmov		r0, sp
 	call		__itimer_irqhandler
 
-	__priv_exit
+	__context_restore
+	__pop		lr				@ pop r30(lr)
+	__pop		sp				@ pop r29(sp)
 	eret
 ENDPROC(__vec_int_itimer)
 
-- 
1.7.9.5

