From c41079901e1f453c2999c36d7986e408c6872a80 Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Mon, 31 Dec 2012 16:48:09 +0800
Subject: [PATCH 515/641] unicore64: Adjust pt_regs struct

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/include/asm/processor.h |    1 +
 arch/unicore64/include/asm/ptrace.h    |   15 ++++----
 arch/unicore64/kernel/entry.S          |   61 ++++++++++++--------------------
 arch/unicore64/kernel/process.c        |    2 +-
 4 files changed, 34 insertions(+), 45 deletions(-)

diff --git a/arch/unicore64/include/asm/processor.h b/arch/unicore64/include/asm/processor.h
index 93d8c7a..990d014 100644
--- a/arch/unicore64/include/asm/processor.h
+++ b/arch/unicore64/include/asm/processor.h
@@ -61,6 +61,7 @@ extern unsigned long get_wchan(struct task_struct *p);
 ({									\
 	unsigned long *stack = (unsigned long *)sp;			\
 	memset(regs->uc64_regs, 0, sizeof(regs->uc64_regs));		\
+	regs->UC64_KSP = (unsigned long)regs; /* keep kernel-mode sp */	\
 	regs->UC64_ASR = ASR_MODE_USER;					\
 	regs->UC64_R31 = pc;		/* pc */                        \
 	regs->UC64_R29 = sp;		/* sp */                        \
diff --git a/arch/unicore64/include/asm/ptrace.h b/arch/unicore64/include/asm/ptrace.h
index 943f096..b0ad7ee 100644
--- a/arch/unicore64/include/asm/ptrace.h
+++ b/arch/unicore64/include/asm/ptrace.h
@@ -7,7 +7,7 @@
  * has to be a multiple of 8.
  */
 struct pt_regs {
-	unsigned long uc64_regs[36];
+	unsigned long uc64_regs[40];
 };
 
 #define UC64_R00		uc64_regs[0]
@@ -41,11 +41,14 @@ struct pt_regs {
 #define UC64_R28		uc64_regs[28]
 #define UC64_AFR		uc64_regs[29]
 #define UC64_ASR		uc64_regs[30]
-#define UC64_SW0		uc64_regs[31] /* CP0_SYSU #0 */
-#define UC64_O00		uc64_regs[32] /* Orig R00 */
-#define UC64_R31		uc64_regs[33]
-#define UC64_R30		uc64_regs[34]
-#define UC64_R29		uc64_regs[35]
+/* Reserve 2 double-words: 31 and 32 */
+#define UC64_SW0		uc64_regs[33] /* CP0_SYSU #0 */
+#define UC64_O00		uc64_regs[34] /* Orig R00 */
+#define UC64_R31		uc64_regs[35]
+#define UC64_R30		uc64_regs[36]
+#define UC64_R29		uc64_regs[37]
+#define UC64_KLR		uc64_regs[38] /* Kernel LR */
+#define UC64_KSP		uc64_regs[39] /* Kernel SP */
 
 #ifdef __KERNEL__
 
diff --git a/arch/unicore64/kernel/entry.S b/arch/unicore64/kernel/entry.S
index f9fed79..8cddf4b 100644
--- a/arch/unicore64/kernel/entry.S
+++ b/arch/unicore64/kernel/entry.S
@@ -13,19 +13,28 @@
 	.endm
 
 	.macro		__context_save
-	@ step 1: push special registers into stack, see struct pt_regs
+	@ step 1: push kernel-mode sp and lr into pt_regs
+	__push		sp
+	__push		lr
+
+	@ step 2: push user-mode sp and lr into pt_regs
+	std.wu		sp, [sp-], #8
+	std.wu		lr, [sp-], #8
+
+	@ step 3: push special registers into pt_regs
 	movc		lr, CP0_TRAPADDR, #1
 	__push		lr				@ push r31(pc)
 	dmov		lr, #-1
 	__push		lr				@ push return value
 	movc		lr, CP0_SYSU, #0
 	__push		lr				@ push swr #0
+	dsub		sp, sp, #16			@ Reserved 2 dwords
 	dmov		lr, bsr
 	__push		lr				@ push bsr
 	dmov		lr, bfr
 	__push		lr				@ push bfr
 
-	@ step 2: push general registers into stack, see struct pt_regs
+	@ step 4: push general registers into pt_regs
 	.irp		n, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16 \
 			, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0
 	__push		r\n
@@ -33,22 +42,31 @@
 	.endm
 
 	.macro		__context_restore
-	@ step 1: pop general registers from stack, see struct pt_regs
+	@ step 1: pop general registers from pt_regs
 	.irp		n, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, \
 			15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
 	__pop		r\n				@ pop r0-r28 regs
 	.endr
 
-	@ step 2: pop special registers from stack, see struct pt_regs
+	@ step 2: pop special registers from pt_regs
 	__pop		lr				@ pop bfr
 	dmov		bfr, lr
 	__pop		lr				@ pop bsr
 	dmov		bsr, lr
 	__pop		lr				@ pop swr #0
 	movc		CP0_SYSU, lr, #0
-	__pop		lr				@ pop return value
+	dadd		sp, sp, #16			@ Reserved 2 dwords
+	dadd		sp, sp, #8			@ pop return value
 	__pop		lr				@ pop r31(pc)
 	movc		CP0_TRAPADDR, lr, #1		@ saved in epc reg
+
+	@ step 3: pop user-mode sp and lr from pt_regs
+	ldd.wu		lr, [sp]+, #8
+	ldd.wu		sp, [sp]+, #8
+
+	@ step 4: pop kernel-mode sp and lr from pt_regs
+	__pop		lr
+	__pop		sp
 	.endm
 
 /**
@@ -73,8 +91,6 @@ ENTRY(ret_from_fork)
 	cmpsub.a	r18, #0
 	bne		__vec_invalid		@ print error information
 	__context_restore
-	ldd.wu		lr, [sp]+, #8
-	ldd.wu		sp, [sp]+, #8
 	eret
 ENDPROC(ret_from_fork)
 
@@ -93,8 +109,6 @@ ENTRY(__vec_invalid)
 ENDPROC(__vec_invalid)
 
 ENTRY(__vec_jepriv)
-	std.wu		sp, [sp-], #8
-	std.wu		lr, [sp-], #8
 	__context_save
 
 	/*
@@ -137,14 +151,10 @@ ret_syscall:
 	cmpsub.a	r18, #0
 	bne		__vec_invalid		@ print error information
 	__context_restore
-	ldd.wu		lr, [sp]+, #8
-	ldd.wu		sp, [sp]+, #8
 	eret
 ENDPROC(__vec_jepriv)
 
 ENTRY(__vec_itrap)
-	__push		sp				@ push r29(sp)
-	__push		lr				@ push r30(lr)
 	__context_save
 
 	@
@@ -163,14 +173,10 @@ ENTRY(__vec_itrap)
 	__irq_disable
 
 	__context_restore
-	__pop		lr				@ pop r30(lr)
-	__pop		sp				@ pop r29(sp)
 	eret
 ENDPROC(__vec_itrap)
 
 ENTRY(__vec_dtrap)
-	__push		sp				@ push r29(sp)
-	__push		lr				@ push r30(lr)
 	__context_save
 
 	@
@@ -189,38 +195,19 @@ ENTRY(__vec_dtrap)
 	__irq_disable
 
 	__context_restore
-	__pop		lr				@ pop r30(lr)
-	__pop		sp				@ pop r29(sp)
 	eret
 ENDPROC(__vec_dtrap)
 
 ENTRY(__vec_int_puv3)
-	__push		sp				@ push r29(sp)
-	__push		lr				@ push r30(lr)
 	__context_save
 #ifdef CONFIG_ARCH_PUV3
 	call		puv3_intc_handler
 #endif
 	__context_restore
-	__pop		lr				@ pop r30(lr)
-	__pop		sp				@ pop r29(sp)
 	eret
 ENDPROC(__vec_int_puv3)
 
 ENTRY(__vec_int_itimer)
-	movc		CP0_SYSU, r0, #4
-	dmov		r0, bsr
-	dand		r0, r0, #7
-	cmpsub.a	r0, #1
-	movc		r0, CP0_SYSU, #4
-	beq		user_entry
-	__push		sp				@ push r29(sp)
-	__push		lr				@ push r30(lr)
-	b		start_save
-user_entry:
-	std.wu		sp, [sp-], #8
-	std.wu		lr, [sp-], #8
-start_save:
 	__context_save
 
 	@ void __itimer_irqhandler(struct pt_regs *regs)
@@ -233,8 +220,6 @@ start_save:
 	beq		ret_syscall
 
 	__context_restore
-	__pop		lr				@ pop r30(lr)
-	__pop		sp				@ pop r29(sp)
 	eret
 ENDPROC(__vec_int_itimer)
 
diff --git a/arch/unicore64/kernel/process.c b/arch/unicore64/kernel/process.c
index 1f1a0c3..95fda38 100644
--- a/arch/unicore64/kernel/process.c
+++ b/arch/unicore64/kernel/process.c
@@ -29,7 +29,7 @@ int copy_thread(unsigned long clone_flags, unsigned long stack_start,
 		p->thread.cpu_context.r17 = stk_sz; /* arg for fn(arg) */
 		memset(childregs, 0, sizeof(struct pt_regs));
 		/* For kernel_thread, useless pt_regs will be kept in stack */
-		childregs->UC64_R29 = (unsigned long)childregs;
+		childregs->UC64_KSP = (unsigned long)childregs;
 	} else {
 		p->thread.cpu_context.r30 = (unsigned long)ret_from_fork;
 
-- 
1.7.9.5

