From b5da0875fec0b835141d00a609f918228b17e523 Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Mon, 31 Dec 2012 18:24:39 +0800
Subject: [PATCH 522/641] unicore64: Simplify do_signal function

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/kernel/signal.c |   47 ++++++++++++++--------------------------
 1 file changed, 16 insertions(+), 31 deletions(-)

diff --git a/arch/unicore64/kernel/signal.c b/arch/unicore64/kernel/signal.c
index 2bc8c40..183c2f1 100644
--- a/arch/unicore64/kernel/signal.c
+++ b/arch/unicore64/kernel/signal.c
@@ -50,7 +50,7 @@ badframe:
  * user-mode trampoline.
  */
 static int setup_rt_frame(int sig, struct k_sigaction *ka, siginfo_t *info,
-			  sigset_t *set, struct pt_regs *regs)
+			  struct pt_regs *regs)
 {
 	struct rt_sigframe  *frame;
 	int err = 0;
@@ -87,42 +87,27 @@ static int setup_rt_frame(int sig, struct k_sigaction *ka, siginfo_t *info,
 	return 0;
 }
 
-static void
-handle_signal(unsigned long sig, siginfo_t *info, struct k_sigaction *ka,
-		struct pt_regs *regs, int syscall)
-{
-	int ret;
-
-	/* Are we from a system call? */
-	if (syscall) {
-		/* If so, check system call restarting.. */
-		if (regs->UC64_R00)
-			BUG();
-	}
-
-	ret = setup_rt_frame(sig, ka, info, sigmask_to_save(), regs);
-	if (ret)
-		return;
-
-	/* Update the blocked signals */
-	signal_delivered(sig, info, ka, regs, 0);
-}
-
-void do_signal(struct pt_regs *regs, int syscall)
+static void do_signal(struct pt_regs *regs, int syscall)
 {
 	struct k_sigaction ka;
 	siginfo_t info;
-	int signr;
+	int signr, ret;
+
+	if (!user_mode(regs)) /* ONLY user threads handle signal */
+		BUG();
 
 	signr = get_signal_to_deliver(&info, &ka, regs, NULL);
-	if (signr > 0) {
-		/* Whee! Actually deliver the signal.  */
-		handle_signal(signr, &info, &ka, regs, syscall);
-		return;
-	}
+	if (signr > 0) { /* Actually deliver the signal.  */
+		if (syscall) /* Are we from a system call? */
+			BUG();
 
-	/* FIXME:check did we come from a system call? */
-	BUG();
+		ret = setup_rt_frame(signr, &ka, &info, regs);
+		if (ret)
+			force_sigsegv(signr, current);
+		else
+			signal_delivered(signr, &info, &ka, regs, false);
+	} else
+		BUG(); /* FIXME: did we come from a system call? */
 }
 
 asmlinkage void do_notify_resume(unsigned int thread_flags, int syscall)
-- 
1.7.9.5

