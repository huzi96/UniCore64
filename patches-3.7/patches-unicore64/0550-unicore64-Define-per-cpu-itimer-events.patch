From c1109d9bc0326e13586e9300f33797bd00c3eb8d Mon Sep 17 00:00:00 2001
From: Chang Huaixin <changhuaixin@mprc.pku.edu.cn>
Date: Wed, 3 Apr 2013 15:10:53 +0800
Subject: [PATCH 550/641] unicore64: Define per cpu itimer events

Signed-off-by: Chang Huaixin <changhuaixin@mprc.pku.edu.cn>
---
 arch/unicore64/kernel/time.c |   23 +++++++++++++++++++----
 1 file changed, 19 insertions(+), 4 deletions(-)

diff --git a/arch/unicore64/kernel/time.c b/arch/unicore64/kernel/time.c
index 2093792..9af4b2f 100644
--- a/arch/unicore64/kernel/time.c
+++ b/arch/unicore64/kernel/time.c
@@ -99,6 +99,21 @@ static struct clock_event_device __itimer_ce = {
 	.set_next_event	= __itimer_set_next_event,
 	.set_mode	= __itimer_set_mode,
 };
+static DEFINE_PER_CPU(struct clock_event_device, __itimer_events);
+
+/*
+ * Setup the local itimer for this CPU. Copy the initialized value
+ * of the boot CPU and register the clock event in the framework.
+ */
+void setup_itimer(void)
+{
+	struct clock_event_device *evt = &__get_cpu_var(__itimer_events);
+
+	memcpy(evt, &__itimer_ce, sizeof(*evt));
+	evt->cpumask = cpumask_of(smp_processor_id());
+
+	clockevents_register_device(evt);
+}
 
 /**
  * __itimer_irqhandler() - handler for itimer irq
@@ -109,13 +124,14 @@ static struct clock_event_device __itimer_ce = {
 void __itimer_irqhandler(struct pt_regs *regs)
 {
 	struct pt_regs *old_regs = set_irq_regs(regs);
+	struct clock_event_device *evt = &__get_cpu_var(__itimer_events);
 	irq_enter();
 
 	/* Disarm the compare/match, signal the event. */
 	__itimer_irq_disable();
 	__itimer_irq_clear();
 
-	__itimer_ce.event_handler(&__itimer_ce);
+	evt->event_handler(evt);
 
 	irq_exit();
 	set_irq_regs(old_regs);
@@ -140,8 +156,7 @@ void __init time_init(void)
 	__itimer_ce.min_delta_ns =
 		clockevent_delta2ns(MIN_COUNTER_DELTA, &__itimer_ce);
 
-	__itimer_ce.cpumask = cpumask_of(smp_processor_id());
-
 	clocksource_register_hz(&puv4_oscr_cs, CLOCK_TICK_RATE);
-	clockevents_register_device(&__itimer_ce);
+
+	setup_itimer();
 }
-- 
1.7.9.5

