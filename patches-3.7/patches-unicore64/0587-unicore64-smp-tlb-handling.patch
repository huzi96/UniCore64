From ecfd44057b5a1a1b12f5eac4620f032ed61e628f Mon Sep 17 00:00:00 2001
From: Chang Huaixin <changhuaixin@mprc.pku.edu.cn>
Date: Mon, 21 Apr 2014 15:58:16 +0800
Subject: [PATCH 587/641] unicore64: smp tlb handling

Signed-off-by: Chang Huaixin <changhuaixin@mprc.pku.edu.cn>
---
 arch/unicore64/include/asm/tlbflush.h |   37 ++++++++++++++++++++++--
 arch/unicore64/kernel/smp.c           |   49 +++++++++++++++++++++++++++++++
 arch/unicore64/mm/Makefile            |    3 +-
 arch/unicore64/mm/tlb.c               |   51 ---------------------------------
 4 files changed, 85 insertions(+), 55 deletions(-)
 delete mode 100644 arch/unicore64/mm/tlb.c

diff --git a/arch/unicore64/include/asm/tlbflush.h b/arch/unicore64/include/asm/tlbflush.h
index d0c5878..083484a 100644
--- a/arch/unicore64/include/asm/tlbflush.h
+++ b/arch/unicore64/include/asm/tlbflush.h
@@ -1,17 +1,50 @@
 #ifndef __UNICORE64_ASM_TLBFLUSH_H__
 #define __UNICORE64_ASM_TLBFLUSH_H__
 
+#include <linux/mm.h>
+#include <linux/kernel.h>
+#include <arch/asm-mmuops.h>
+
 /* following macros used for asm-generic/tlb.h */
 #define tlb_start_vma(tlb, vma)				do { } while (0)
 #define tlb_end_vma(tlb, vma)				do { } while (0)
 #define __tlb_remove_tlb_entry(tlb, ptep, address)	do { } while (0)
 
+#ifndef CONFIG_SMP
+
+static inline void flush_tlb_mm(struct mm_struct *mm)
+{
+	__invalid_tlb();
+}
+
+static inline void flush_tlb_page(struct vm_area_struct *vma, unsigned long va)
+{
+	__asm__ __volatile__(
+			"__invalid_itlb_by_va	%0\n"
+			"__invalid_dtlb_by_va	%0\n"
+			: : "r" (va)
+			: "memory", "cc");
+}
+
+static inline void flush_tlb_range(struct vm_area_struct *vma,
+		     unsigned long start, unsigned long end)
+{
+	__invalid_tlb();
+}
+
+#else /* CONFIG_SMP */
 extern void flush_tlb_mm(struct mm_struct *);
 extern void flush_tlb_page(struct vm_area_struct *, unsigned long);
-extern void flush_tlb_range(struct vm_area_struct *, unsigned long,	\
+extern void flush_tlb_range(struct vm_area_struct *, unsigned long,
 		unsigned long);
+#endif /* CONFIG_SMP */
 
-extern void flush_tlb_kernel_range(unsigned long, unsigned long);
+static inline void flush_tlb_kernel_range(unsigned long start,
+		unsigned long end)
+{
+	/* FIXME */
+	BUG();
+}
 
 extern void update_mmu_cache(struct vm_area_struct *, unsigned long, pte_t *);
 
diff --git a/arch/unicore64/kernel/smp.c b/arch/unicore64/kernel/smp.c
index a514c93..b238958 100644
--- a/arch/unicore64/kernel/smp.c
+++ b/arch/unicore64/kernel/smp.c
@@ -6,6 +6,7 @@
 #include <linux/interrupt.h>
 
 #include <asm/pgtable.h>
+#include <asm/tlbflush.h>
 #include <arch/hwdef-cp0-sysctrl.h>
 
 #define __ipi_disable()	\
@@ -254,3 +255,51 @@ void smp_send_stop(void)
 	/* FIXME */
 	BUG();
 }
+
+static void ipi_flush_tlb_mm(void *x)
+{
+	__invalid_tlb();
+}
+
+void flush_tlb_mm(struct mm_struct *mm)
+{
+	preempt_disable();
+
+	if (mm == current->active_mm)
+		__invalid_tlb();
+
+	if (smp_call_function(ipi_flush_tlb_mm, NULL, 1)) {
+		printk(KERN_CRIT "flush_tlb_mm: timed out\n");
+	}
+
+	preempt_enable();
+}
+
+static void ipi_flush_tlb_page(void *x)
+{
+	/* flush the whole tlb currently. */
+	__invalid_tlb();
+}
+
+void flush_tlb_page(struct vm_area_struct *vma, unsigned long addr)
+{
+	struct mm_struct *mm = vma->vm_mm;
+
+	preempt_disable();
+
+	if (mm == current->active_mm)
+		__invalid_tlb();
+
+	if (smp_call_function(ipi_flush_tlb_page, NULL, 1)) {
+		printk(KERN_CRIT "flush_tlb_page: timed out\n");
+	}
+
+	preempt_enable();
+}
+
+void flush_tlb_range(struct vm_area_struct *vma, unsigned long start,
+		unsigned long end)
+{
+	/* flush the whole user tlb.  */
+	flush_tlb_mm(vma->vm_mm);
+}
diff --git a/arch/unicore64/mm/Makefile b/arch/unicore64/mm/Makefile
index 1633838..a5f9ddf 100644
--- a/arch/unicore64/mm/Makefile
+++ b/arch/unicore64/mm/Makefile
@@ -2,8 +2,7 @@ ccflags-$(CONFIG_DEBUG_MCOUNT)	:= -pg
 CFLAGS_REMOVE_fault.o		:= -pg
 CFLAGS_REMOVE_mmu.o		:= -pg
 CFLAGS_REMOVE_pgtable.o		:= -pg
-CFLAGS_REMOVE_tlb.o		:= -pg
 
 obj-y				:= fault.o ioremap.o init.o
-obj-y				+= mmu.o pgtable.o tlb.o
+obj-y				+= mmu.o pgtable.o
 obj-$(CONFIG_SWIOTLB)		+= dma-swiotlb.o
diff --git a/arch/unicore64/mm/tlb.c b/arch/unicore64/mm/tlb.c
deleted file mode 100644
index 2181697..0000000
--- a/arch/unicore64/mm/tlb.c
+++ /dev/null
@@ -1,51 +0,0 @@
-#include <linux/mm.h>
-#include <linux/kernel.h>
-#include <asm/tlbflush.h>
-#include <arch/asm-mmuops.h>
-
-/**
- * flush_tlb_mm() -
- * @mm
- */
-void flush_tlb_mm(struct mm_struct *mm)
-{
-	__invalid_tlb();
-}
-
-/**
- * flush_tlb_page() -
- * @vma:
- * @va:
- */
-void flush_tlb_page(struct vm_area_struct *vma, unsigned long va)
-{
-	__asm__ __volatile__(
-			"__invalid_itlb_by_va	%0\n"
-			"__invalid_dtlb_by_va	%0\n"
-			: : "r" (va)
-			: "memory", "cc");
-}
-
-
-/**
- * flush_tlb_range() -
- * @vma:
- * @start:
- * @end:
- */
-void flush_tlb_range(struct vm_area_struct *vma,
-		     unsigned long start, unsigned long end)
-{
-	__invalid_tlb();
-}
-
-/**
- * flush_tlb_kernl_range() -
- * @start:
- * @end:
- */
-void flush_tlb_kernel_range(unsigned long start, unsigned long end)
-{
-	/* FIXME */
-	BUG();
-}
-- 
1.7.9.5

