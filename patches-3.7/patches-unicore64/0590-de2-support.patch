From 56ad92acd53d3de7e19e0ee3ebb48b274354f87a Mon Sep 17 00:00:00 2001
From: Zhang Huan <zhanghuan@mprc.pku.edu.cn>
Date: Sat, 19 Apr 2014 02:39:17 +0800
Subject: [PATCH 590/641] de2 support

signed-off-by: Ma Lina < malina@mprc.pku.edu.cn>
---
 arch/unicore64/include/arch/puv4-iomem.h |   12 ++++++++++++
 arch/unicore64/include/asm/fb.h          |   19 +++++++++++++++++++
 arch/unicore64/include/asm/pgtable.h     |    9 +++++++++
 arch/unicore64/mm/init.c                 |    2 ++
 4 files changed, 42 insertions(+)
 create mode 100644 arch/unicore64/include/asm/fb.h

diff --git a/arch/unicore64/include/arch/puv4-iomem.h b/arch/unicore64/include/arch/puv4-iomem.h
index 4b45c21..13a0be2 100644
--- a/arch/unicore64/include/arch/puv4-iomem.h
+++ b/arch/unicore64/include/arch/puv4-iomem.h
@@ -73,4 +73,16 @@
 #define PUV4_PS2_BASE			(PUV4_APB_BASE + 0x1100000)
 #include <arch/puv4-regs-ps2.h>
 
+/* FIXME:
+ * PKUNITY Memory Map Addresses: 0x03000000 - 0x03FFFFFF (16MB)
+ */
+#define PKUNITY_DE2_MMAP_BASE	        0x03800000 \
+/* 0x03800000 - 0x04000000 8MB */
+#define PKUNITY_DE2_MMAP_SIZE		0x00800000 /* 8MB */
+#define PKUNITY_VPU_MMAP_BASE	        0x0C000000 \
+/* 0x0C000000 - 0x15FFFFFF 160MB */
+#define PKUNITY_VPU_MMAP_SIZE		0x0A000000 /* 160MB */
+#define PKUNITY_UNIGFX2_BASE		(PUV4_AHB_BASE + 0xC00000) /* FIXME */
+#include <arch/puv4-regs-unigfx2.h>
+
 #endif  /* __UNICORE64_ARCH_PUV4_IOMEM_H__ */
diff --git a/arch/unicore64/include/asm/fb.h b/arch/unicore64/include/asm/fb.h
new file mode 100644
index 0000000..6277d05
--- /dev/null
+++ b/arch/unicore64/include/asm/fb.h
@@ -0,0 +1,19 @@
+#ifndef __UNICORE_FB_H__
+#define __UNICORE_FB_H__
+
+#include <linux/fb.h>
+#include <linux/fs.h>
+#include <asm/page.h>
+
+static inline void fb_pgprotect(struct file *file, struct vm_area_struct *vma,
+				unsigned long off)
+{
+	vma->vm_page_prot = pgprot_writecombine(vma->vm_page_prot);
+}
+
+static inline int fb_is_primary_device(struct fb_info *info)
+{
+	return 0;
+}
+
+#endif /* __UNICORE_FB_H__ */
diff --git a/arch/unicore64/include/asm/pgtable.h b/arch/unicore64/include/asm/pgtable.h
index 99e3a39..6ed9ba8 100644
--- a/arch/unicore64/include/asm/pgtable.h
+++ b/arch/unicore64/include/asm/pgtable.h
@@ -99,4 +99,13 @@ extern void set_pte(pte_t *ptep, pte_t pteval);
 
 #include <asm-generic/pgtable.h>
 
+/*
+ * Remap a physical page `pfn' of size `size' with page protection `prot'
+ * into virtual address `from'
+ */
+#define io_remap_pfn_range(vma, from, pfn, size, prot) \
+remap_pfn_range(vma, from, pfn, size, prot)
+
+#define pgtable_cache_init() do { } while (0)
+
 #endif /* __UNICORE64_ASM_PGTABLE_H__ */
diff --git a/arch/unicore64/mm/init.c b/arch/unicore64/mm/init.c
index 5d8638d..b86f990 100644
--- a/arch/unicore64/mm/init.c
+++ b/arch/unicore64/mm/init.c
@@ -5,6 +5,8 @@
 #include <asm/sections.h>
 #include <asm/setup_arch.h>
 
+#include <arch/puv4-iomem.h>
+
 /**
  * mem_init() - release free pages to the buddy allocator
  * Returns the number of pages actually released.
-- 
1.7.9.5

