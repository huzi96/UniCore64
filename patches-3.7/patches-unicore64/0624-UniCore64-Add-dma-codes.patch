From 970614cd58bf5e92158776dc7e60de21ef65cd32 Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Tue, 6 May 2014 00:31:12 +0800
Subject: [PATCH 624/641] UniCore64: Add dma codes

Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
---
 arch/unicore64/include/asm/dma-mapping.h |   60 +++++++++++++++++++++++++++---
 arch/unicore64/mm/dma-swiotlb.c          |   45 ----------------------
 2 files changed, 55 insertions(+), 50 deletions(-)

diff --git a/arch/unicore64/include/asm/dma-mapping.h b/arch/unicore64/include/asm/dma-mapping.h
index 948510d..45a361b5 100644
--- a/arch/unicore64/include/asm/dma-mapping.h
+++ b/arch/unicore64/include/asm/dma-mapping.h
@@ -27,12 +27,62 @@ extern struct dma_map_ops swiotlb_dma_map_ops;
 #define dma_free_noncoherent(d, s, a, h)	\
 		dma_free_coherent((d), (s), (a), (h))
 
-extern bool dma_capable(struct device *dev, dma_addr_t addr, size_t size);
-extern dma_addr_t phys_to_dma(struct device *dev, phys_addr_t paddr);
-extern phys_addr_t dma_to_phys(struct device *dev, dma_addr_t daddr);
-extern void dma_mark_clean(void *addr, size_t size);
-
 #include <asm-generic/dma-mapping-common.h>
 
+static inline bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)
+{
+	if (dev && dev->dma_mask)
+		return addr + size - 1 <= *dev->dma_mask;
+
+	return 1;
+}
+
+static inline dma_addr_t phys_to_dma(struct device *dev, phys_addr_t paddr)
+{
+	return paddr;
+}
+
+static inline phys_addr_t dma_to_phys(struct device *dev, dma_addr_t daddr)
+{
+	return daddr;
+}
+
+static inline void dma_mark_clean(void *addr, size_t size) {}
+
+static inline int dma_set_mask(struct device *dev, u64 dma_mask)
+{
+	if (!dev->dma_mask || !dma_supported(dev, dma_mask))
+		return -EIO;
+
+	*dev->dma_mask = dma_mask;
+
+	return 0;
+}
+
+#define dma_alloc_coherent(d,s,h,f)	dma_alloc_attrs(d,s,h,f,NULL)
+
+static inline void *dma_alloc_attrs(struct device *dev, size_t size,
+				    dma_addr_t *dma_handle, gfp_t flag,
+				    struct dma_attrs *attrs)
+{
+	struct dma_map_ops *dma_ops = get_dma_ops(dev);
+
+	return dma_ops->alloc(dev, size, dma_handle, flag, attrs);
+}
+
+#define dma_free_coherent(d,s,c,h) dma_free_attrs(d,s,c,h,NULL)
+
+static inline void dma_free_attrs(struct device *dev, size_t size,
+				  void *cpu_addr, dma_addr_t dma_handle,
+				  struct dma_attrs *attrs)
+{
+	struct dma_map_ops *dma_ops = get_dma_ops(dev);
+
+	dma_ops->free(dev, size, cpu_addr, dma_handle, attrs);
+}
+
+#define dma_alloc_noncoherent(d, s, h, f) dma_alloc_coherent(d, s, h, f)
+#define dma_free_noncoherent(d, s, v, h) dma_free_coherent(d, s, v, h)
+
 #endif /* __KERNEL__ */
 #endif /* __UNICORE64_ASM_DMA_MAPPING_H__ */
diff --git a/arch/unicore64/mm/dma-swiotlb.c b/arch/unicore64/mm/dma-swiotlb.c
index 68f79c0..ea61a0b 100644
--- a/arch/unicore64/mm/dma-swiotlb.c
+++ b/arch/unicore64/mm/dma-swiotlb.c
@@ -7,51 +7,6 @@
 
 #include <asm/dma.h>
 
-/**
- * dma_capable() -
- * @dev:
- * @addr:
- * @size:
- */
-bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)
-{
-	/* FIXME */
-	BUG();
-}
-
-/**
- * phys_to_dma() -
- * @dev:
- * @paddr:
- */
-dma_addr_t phys_to_dma(struct device *dev, phys_addr_t paddr)
-{
-	/* FIXME */
-	BUG();
-}
-
-/**
- * dma_to_phys() -
- * @dev:
- * @daddr:
- */
-phys_addr_t dma_to_phys(struct device *dev, dma_addr_t daddr)
-{
-	/* FIXME */
-	BUG();
-}
-
-/**
- * dma_mark_clean() -
- * @addr:
- * @size:
- */
-void dma_mark_clean(void *addr, size_t size)
-{
-	/* FIXME */
-	BUG();
-}
-
 static void *__uc64_swiotlb_alloc_coherent(struct device *dev, size_t size,
 				        dma_addr_t *dma_handle, gfp_t flags,
 					struct dma_attrs *attrs)
-- 
1.7.9.5

